.ProseMirror {
	position: relative;
}

.ProseMirror {
	word-wrap: break-word;
	white-space: pre-wrap;
	white-space: break-spaces;
	-webkit-font-variant-ligatures: none;
	font-variant-ligatures: none;
	font-feature-settings: 'liga' 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror [contenteditable='false'] {
	white-space: normal;
}

.ProseMirror [contenteditable='false'] [contenteditable='true'] {
	white-space: pre-wrap;
}

.ProseMirror pre {
	white-space: pre-wrap;
}

img.ProseMirror-separator {
	display: inline !important;
	border: none !important;
	margin: 0 !important;
	width: 1px !important;
	height: 1px !important;
}

.ProseMirror-gapcursor {
	display: none;
	pointer-events: none;
	position: absolute;
	margin: 0;
}

.ProseMirror-gapcursor:after {
	content: '';
	display: block;
	position: absolute;
	top: -2px;
	width: 20px;
	border-top: 1px solid black;
	animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
	to {
		visibility: hidden;
	}
}

.ProseMirror-hideselection *::selection {
	background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
	background: transparent;
}

.ProseMirror-hideselection * {
	caret-color: transparent;
}

.ProseMirror-focused .ProseMirror-gapcursor {
	display: block;
}

.tippy-box[data-animation='fade'][data-state='hidden'] {
	opacity: 0;
}
/*
! tailwindcss v3.1.4 | MIT License | https://tailwindcss.com
*/ /*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
	box-sizing: border-box; /* 1 */
	border-width: 0; /* 2 */
	border-style: solid; /* 2 */
	border-color: #e5e7eb; /* 2 */
}

::before,
::after {
	--tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
	line-height: 1.5; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
	-moz-tab-size: 4; /* 3 */
	-o-tab-size: 4;
	tab-size: 4; /* 3 */
	font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
		'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
		'Segoe UI Symbol', 'Noto Color Emoji'; /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
	margin: 0; /* 1 */
	line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
	border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
	color: inherit;
	text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
		'Courier New', monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
	border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	font-weight: inherit; /* 1 */
	line-height: inherit; /* 1 */
	color: inherit; /* 1 */
	margin: 0; /* 2 */
	padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
	text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button; /* 1 */
	background-color: transparent; /* 2 */
	background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
	outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button; /* 1 */
	font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
	margin: 0;
}

fieldset {
	margin: 0;
	padding: 0;
}

legend {
	padding: 0;
}

ol,
ul,
menu {
	list-style: none;
	margin: 0;
	padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
	resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
	opacity: 1; /* 1 */
	color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
	opacity: 1; /* 1 */
	color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role='button'] {
	cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
	cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
	display: block; /* 1 */
	vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
	max-width: 100%;
	height: auto;
}

:root,
[data-theme] {
	background-color: white;
	color: black;
}

html {
	-webkit-tap-highlight-color: transparent;
}

:root {
	--p: 198 93% 60%;
	--pf: 198 93% 48%;
	--sf: 234 89% 59%;
	--af: 329 86% 56%;
	--b2: 222 47% 10%;
	--b3: 222 47% 9%;
	--bc: 222 66% 82%;
	--pc: 198 100% 12%;
	--sc: 234 100% 15%;
	--ac: 329 100% 14%;
	--nc: 217 76% 83%;
	--inc: 198 100% 10%;
	--suc: 172 100% 10%;
	--wac: 41 100% 13%;
	--erc: 351 100% 14%;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--s: 234 89% 74%;
	--a: 329 86% 70%;
	--n: 217 33% 17%;
	--nf: 217 30% 22%;
	--b1: 222 47% 11%;
	--in: 198 90% 48%;
	--su: 172 66% 50%;
	--wa: 41 88% 64%;
	--er: 351 95% 71%;
}

[data-theme='night'] {
	--p: 198 93% 60%;
	--pf: 198 93% 48%;
	--sf: 234 89% 59%;
	--af: 329 86% 56%;
	--b2: 222 47% 10%;
	--b3: 222 47% 9%;
	--bc: 222 66% 82%;
	--pc: 198 100% 12%;
	--sc: 234 100% 15%;
	--ac: 329 100% 14%;
	--nc: 217 76% 83%;
	--inc: 198 100% 10%;
	--suc: 172 100% 10%;
	--wac: 41 100% 13%;
	--erc: 351 100% 14%;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--s: 234 89% 74%;
	--a: 329 86% 70%;
	--n: 217 33% 17%;
	--nf: 217 30% 22%;
	--b1: 222 47% 11%;
	--in: 198 90% 48%;
	--su: 172 66% 50%;
	--wa: 41 88% 64%;
	--er: 351 95% 71%;
}

[data-theme='retro'] {
	--p: 3 74% 76%;
	--pf: 3 74% 61%;
	--sf: 145 27% 58%;
	--af: 49 67% 61%;
	--nf: 42 17% 34%;
	--inc: 221 100% 91%;
	--suc: 142 100% 87%;
	--wac: 32 100% 9%;
	--erc: 0 100% 90%;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--pc: 345 5% 15%;
	--s: 145 27% 72%;
	--sc: 345 5% 15%;
	--a: 49 67% 76%;
	--ac: 345 5% 15%;
	--n: 42 17% 42%;
	--nc: 45 47% 80%;
	--b1: 45 47% 80%;
	--b2: 45 37% 72%;
	--b3: 42 36% 65%;
	--bc: 345 5% 15%;
	--in: 221 83% 53%;
	--su: 142 76% 36%;
	--wa: 32 95% 44%;
	--er: 0 72% 51%;
	--rounded-box: 0.4rem;
	--rounded-btn: 0.4rem;
	--rounded-badge: 0.4rem;
}

*,
::before,
::after {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}

::-webkit-backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}

::backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}
.prose {
	color: var(--tw-prose-body);
	max-width: 65ch;
}
.prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-lead);
	font-size: 1.25em;
	line-height: 1.6;
	margin-top: 1.2em;
	margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-links);
	text-decoration: underline;
	font-weight: 500;
}
.prose :where(strong):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-bold);
	font-weight: 600;
}
.prose :where(ol):not(:where([class~='not-prose'] *)) {
	list-style-type: decimal;
	padding-left: 1.625em;
}
.prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
	list-style-type: upper-alpha;
}
.prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
	list-style-type: lower-alpha;
}
.prose :where(ol[type='A' s]):not(:where([class~='not-prose'] *)) {
	list-style-type: upper-alpha;
}
.prose :where(ol[type='a' s]):not(:where([class~='not-prose'] *)) {
	list-style-type: lower-alpha;
}
.prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
	list-style-type: upper-roman;
}
.prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
	list-style-type: lower-roman;
}
.prose :where(ol[type='I' s]):not(:where([class~='not-prose'] *)) {
	list-style-type: upper-roman;
}
.prose :where(ol[type='i' s]):not(:where([class~='not-prose'] *)) {
	list-style-type: lower-roman;
}
.prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
	list-style-type: decimal;
}
.prose :where(ul):not(:where([class~='not-prose'] *)) {
	list-style-type: disc;
	padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
	font-weight: 400;
	color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
	color: var(--tw-prose-bullets);
}
.prose :where(hr):not(:where([class~='not-prose'] *)) {
	border-color: var(--tw-prose-hr);
	border-top-width: 1px;
	margin-top: 3em;
	margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~='not-prose'] *)) {
	font-weight: 500;
	font-style: italic;
	color: var(--tw-prose-quotes);
	border-left-width: 0.25rem;
	border-left-color: var(--tw-prose-quote-borders);
	quotes: '\201C''\201D''\2018''\2019';
	margin-top: 1.6em;
	margin-bottom: 1.6em;
	padding-left: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'] *))::before {
	content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *))::after {
	content: close-quote;
}
.prose :where(h1):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-headings);
	font-weight: 800;
	font-size: 2.25em;
	margin-top: 0;
	margin-bottom: 0.8888889em;
	line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
	font-weight: 900;
}
.prose :where(h2):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-headings);
	font-weight: 700;
	font-size: 1.5em;
	margin-top: 2em;
	margin-bottom: 1em;
	line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
	font-weight: 800;
}
.prose :where(h3):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	font-size: 1.25em;
	margin-top: 1.6em;
	margin-bottom: 0.6em;
	line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
	font-weight: 700;
}
.prose :where(h4):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	margin-top: 1.5em;
	margin-bottom: 0.5em;
	line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
	font-weight: 700;
}
.prose :where(figure > *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-captions);
	font-size: 0.875em;
	line-height: 1.4285714;
	margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-code);
	font-weight: 600;
	font-size: 0.875em;
}
.prose :where(code):not(:where([class~='not-prose'] *))::before {
	content: '`';
}
.prose :where(code):not(:where([class~='not-prose'] *))::after {
	content: '`';
}
.prose :where(a code):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-links);
}
.prose :where(pre):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-pre-code);
	background-color: var(--tw-prose-pre-bg);
	overflow-x: auto;
	font-weight: 400;
	font-size: 0.875em;
	line-height: 1.7142857;
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
	border-radius: 0.375rem;
	padding-top: 0.8571429em;
	padding-right: 1.1428571em;
	padding-bottom: 0.8571429em;
	padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~='not-prose'] *)) {
	background-color: transparent;
	border-width: 0;
	border-radius: 0;
	padding: 0;
	font-weight: inherit;
	color: inherit;
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
}
.prose :where(pre code):not(:where([class~='not-prose'] *))::before {
	content: none;
}
.prose :where(pre code):not(:where([class~='not-prose'] *))::after {
	content: none;
}
.prose :where(table):not(:where([class~='not-prose'] *)) {
	width: 100%;
	table-layout: auto;
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	font-size: 0.875em;
	line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~='not-prose'] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~='not-prose'] *)) {
	color: var(--tw-prose-headings);
	font-weight: 600;
	vertical-align: bottom;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
	border-bottom-width: 1px;
	border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
	border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~='not-prose'] *)) {
	vertical-align: baseline;
	padding-top: 0.5714286em;
	padding-right: 0.5714286em;
	padding-bottom: 0.5714286em;
	padding-left: 0.5714286em;
}
.prose {
	--tw-prose-body: #374151;
	--tw-prose-headings: #111827;
	--tw-prose-lead: #4b5563;
	--tw-prose-links: #111827;
	--tw-prose-bold: #111827;
	--tw-prose-counters: #6b7280;
	--tw-prose-bullets: #d1d5db;
	--tw-prose-hr: #e5e7eb;
	--tw-prose-quotes: #111827;
	--tw-prose-quote-borders: #e5e7eb;
	--tw-prose-captions: #6b7280;
	--tw-prose-code: #111827;
	--tw-prose-pre-code: #e5e7eb;
	--tw-prose-pre-bg: #1f2937;
	--tw-prose-th-borders: #d1d5db;
	--tw-prose-td-borders: #e5e7eb;
	--tw-prose-invert-body: #d1d5db;
	--tw-prose-invert-headings: #fff;
	--tw-prose-invert-lead: #9ca3af;
	--tw-prose-invert-links: #fff;
	--tw-prose-invert-bold: #fff;
	--tw-prose-invert-counters: #9ca3af;
	--tw-prose-invert-bullets: #4b5563;
	--tw-prose-invert-hr: #374151;
	--tw-prose-invert-quotes: #f3f4f6;
	--tw-prose-invert-quote-borders: #374151;
	--tw-prose-invert-captions: #9ca3af;
	--tw-prose-invert-code: #fff;
	--tw-prose-invert-pre-code: #d1d5db;
	--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
	--tw-prose-invert-th-borders: #4b5563;
	--tw-prose-invert-td-borders: #374151;
	font-size: 1rem;
	line-height: 1.75;
}
.prose :where(p):not(:where([class~='not-prose'] *)) {
	margin-top: 1.25em;
	margin-bottom: 1.25em;
}
.prose :where(img):not(:where([class~='not-prose'] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}
.prose :where(video):not(:where([class~='not-prose'] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~='not-prose'] *)) {
	margin-top: 2em;
	margin-bottom: 2em;
}
.prose :where(h2 code):not(:where([class~='not-prose'] *)) {
	font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~='not-prose'] *)) {
	font-size: 0.9em;
}
.prose :where(li):not(:where([class~='not-prose'] *)) {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~='not-prose'] *)) {
	padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~='not-prose'] *)) {
	padding-left: 0.375em;
}
.prose > :where(ul > li p):not(:where([class~='not-prose'] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
	margin-top: 1.25em;
}
.prose > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
	margin-bottom: 1.25em;
}
.prose > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
	margin-top: 1.25em;
}
.prose > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
	margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
	margin-top: 0.75em;
	margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
	padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
	padding-right: 0;
}
.prose :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
	padding-left: 0;
}
.prose :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
	padding-right: 0;
}
.prose > :where(:first-child):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose > :where(:last-child):not(:where([class~='not-prose'] *)) {
	margin-bottom: 0;
}
.prose-sm {
	font-size: 0.875rem;
	line-height: 1.7142857;
}
.prose-sm :where(p):not(:where([class~='not-prose'] *)) {
	margin-top: 1.1428571em;
	margin-bottom: 1.1428571em;
}
.prose-sm :where([class~='lead']):not(:where([class~='not-prose'] *)) {
	font-size: 1.2857143em;
	line-height: 1.5555556;
	margin-top: 0.8888889em;
	margin-bottom: 0.8888889em;
}
.prose-sm :where(blockquote):not(:where([class~='not-prose'] *)) {
	margin-top: 1.3333333em;
	margin-bottom: 1.3333333em;
	padding-left: 1.1111111em;
}
.prose-sm :where(h1):not(:where([class~='not-prose'] *)) {
	font-size: 2.1428571em;
	margin-top: 0;
	margin-bottom: 0.8em;
	line-height: 1.2;
}
.prose-sm :where(h2):not(:where([class~='not-prose'] *)) {
	font-size: 1.4285714em;
	margin-top: 1.6em;
	margin-bottom: 0.8em;
	line-height: 1.4;
}
.prose-sm :where(h3):not(:where([class~='not-prose'] *)) {
	font-size: 1.2857143em;
	margin-top: 1.5555556em;
	margin-bottom: 0.4444444em;
	line-height: 1.5555556;
}
.prose-sm :where(h4):not(:where([class~='not-prose'] *)) {
	margin-top: 1.4285714em;
	margin-bottom: 0.5714286em;
	line-height: 1.4285714;
}
.prose-sm :where(img):not(:where([class~='not-prose'] *)) {
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
}
.prose-sm :where(video):not(:where([class~='not-prose'] *)) {
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
}
.prose-sm :where(figure):not(:where([class~='not-prose'] *)) {
	margin-top: 1.7142857em;
	margin-bottom: 1.7142857em;
}
.prose-sm :where(figure > *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
	margin-bottom: 0;
}
.prose-sm :where(figcaption):not(:where([class~='not-prose'] *)) {
	font-size: 0.8571429em;
	line-height: 1.3333333;
	margin-top: 0.6666667em;
}
.prose-sm :where(code):not(:where([class~='not-prose'] *)) {
	font-size: 0.8571429em;
}
.prose-sm :where(h2 code):not(:where([class~='not-prose'] *)) {
	font-size: 0.9em;
}
.prose-sm :where(h3 code):not(:where([class~='not-prose'] *)) {
	font-size: 0.8888889em;
}
.prose-sm :where(pre):not(:where([class~='not-prose'] *)) {
	font-size: 0.8571429em;
	line-height: 1.6666667;
	margin-top: 1.6666667em;
	margin-bottom: 1.6666667em;
	border-radius: 0.25rem;
	padding-top: 0.6666667em;
	padding-right: 1em;
	padding-bottom: 0.6666667em;
	padding-left: 1em;
}
.prose-sm :where(ol):not(:where([class~='not-prose'] *)) {
	padding-left: 1.5714286em;
}
.prose-sm :where(ul):not(:where([class~='not-prose'] *)) {
	padding-left: 1.5714286em;
}
.prose-sm :where(li):not(:where([class~='not-prose'] *)) {
	margin-top: 0.2857143em;
	margin-bottom: 0.2857143em;
}
.prose-sm :where(ol > li):not(:where([class~='not-prose'] *)) {
	padding-left: 0.4285714em;
}
.prose-sm :where(ul > li):not(:where([class~='not-prose'] *)) {
	padding-left: 0.4285714em;
}
.prose-sm > :where(ul > li p):not(:where([class~='not-prose'] *)) {
	margin-top: 0.5714286em;
	margin-bottom: 0.5714286em;
}
.prose-sm > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
	margin-top: 1.1428571em;
}
.prose-sm > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
	margin-bottom: 1.1428571em;
}
.prose-sm > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
	margin-top: 1.1428571em;
}
.prose-sm > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
	margin-bottom: 1.1428571em;
}
.prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
	margin-top: 0.5714286em;
	margin-bottom: 0.5714286em;
}
.prose-sm :where(hr):not(:where([class~='not-prose'] *)) {
	margin-top: 2.8571429em;
	margin-bottom: 2.8571429em;
}
.prose-sm :where(hr + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose-sm :where(h2 + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose-sm :where(h3 + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose-sm :where(h4 + *):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose-sm :where(table):not(:where([class~='not-prose'] *)) {
	font-size: 0.8571429em;
	line-height: 1.5;
}
.prose-sm :where(thead th):not(:where([class~='not-prose'] *)) {
	padding-right: 1em;
	padding-bottom: 0.6666667em;
	padding-left: 1em;
}
.prose-sm :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
	padding-left: 0;
}
.prose-sm :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
	padding-right: 0;
}
.prose-sm :where(tbody td):not(:where([class~='not-prose'] *)) {
	padding-top: 0.6666667em;
	padding-right: 1em;
	padding-bottom: 0.6666667em;
	padding-left: 1em;
}
.prose-sm :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
	padding-left: 0;
}
.prose-sm :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
	padding-right: 0;
}
.prose-sm > :where(:first-child):not(:where([class~='not-prose'] *)) {
	margin-top: 0;
}
.prose-sm > :where(:last-child):not(:where([class~='not-prose'] *)) {
	margin-bottom: 0;
}
.avatar {
	position: relative;
	display: inline-flex;
}
.avatar > div {
	display: block;
	aspect-ratio: 1 / 1;
	overflow: hidden;
}
.avatar img {
	height: 100%;
	width: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}
.avatar.placeholder > div {
	display: flex;
	align-items: center;
	justify-content: center;
}
.badge {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	height: 1.25rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	width: -webkit-fit-content;
	width: -moz-fit-content;
	width: fit-content;
	padding-left: 0.563rem;
	padding-right: 0.563rem;
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: hsl(var(--n) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
	border-radius: var(--rounded-badge, 1.9rem);
}
.\!badge {
	display: inline-flex !important;
	align-items: center !important;
	justify-content: center !important;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter !important;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter !important;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter !important;
	transition-duration: 200ms !important;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
	height: 1.25rem !important;
	font-size: 0.875rem !important;
	line-height: 1.25rem !important;
	width: -webkit-fit-content !important;
	width: -moz-fit-content !important;
	width: fit-content !important;
	padding-left: 0.563rem !important;
	padding-right: 0.563rem !important;
	border-width: 1px !important;
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--n) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--n) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--nc) / var(--tw-text-opacity)) !important;
	border-radius: var(--rounded-badge, 1.9rem) !important;
}
.breadcrumbs {
	max-width: 100%;
	overflow-x: auto;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.breadcrumbs > ul {
	display: flex;
	align-items: center;
	white-space: nowrap;
	min-height: -webkit-min-content;
	min-height: -moz-min-content;
	min-height: min-content;
}
.breadcrumbs > ul > li {
	display: flex;
	align-items: center;
}
.breadcrumbs > ul > li > a {
	display: flex;
	cursor: pointer;
	align-items: center;
}
.breadcrumbs > ul > li > a:hover {
	-webkit-text-decoration-line: underline;
	text-decoration-line: underline;
}
.btn {
	display: inline-flex;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	border-color: transparent;
	border-color: hsl(var(--n) / var(--tw-border-opacity));
	text-align: center;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	border-radius: var(--rounded-btn, 0.5rem);
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 1em;
	min-height: 3rem;
	font-weight: 600;
	text-transform: uppercase;
	text-transform: var(--btn-text-case, uppercase);
	-webkit-text-decoration-line: none;
	text-decoration-line: none;
	border-width: var(--border-btn, 1px);
	-webkit-animation: button-pop var(--animation-btn, 0.25s) ease-out;
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-disabled,
.btn[disabled] {
	pointer-events: none;
}
.btn-square {
	height: 3rem;
	width: 3rem;
	padding: 0px;
}
.btn-circle {
	height: 3rem;
	width: 3rem;
	border-radius: 9999px;
	padding: 0px;
}
.btn.loading,
.btn.loading:hover {
	pointer-events: none;
}
.btn.loading:before {
	margin-right: 0.5rem;
	height: 1rem;
	width: 1rem;
	border-radius: 9999px;
	border-width: 2px;
	-webkit-animation: spin 2s linear infinite;
	animation: spin 2s linear infinite;
	content: '';
	border-top-color: transparent;
	border-left-color: transparent;
	border-bottom-color: currentColor;
	border-right-color: currentColor;
}
@media (prefers-reduced-motion: reduce) {
	.btn.loading:before {
		-webkit-animation: spin 10s linear infinite;
		animation: spin 10s linear infinite;
	}
}
@-webkit-keyframes spin {
	from {
		transform: rotate(0deg);
	}

	to {
		transform: rotate(360deg);
	}
}
@keyframes spin {
	from {
		transform: rotate(0deg);
	}

	to {
		transform: rotate(360deg);
	}
}
.btn-group {
	display: flex;
	flex-wrap: wrap;
}
.btn-group > input[type='radio'].btn {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
.btn-group > input[type='radio'].btn:before {
	content: attr(data-title);
}
.card {
	position: relative;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	border-radius: var(--rounded-box, 1rem);
}
.card:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.card-body {
	display: flex;
	flex: 1 1 auto;
	flex-direction: column;
	padding: var(--padding-card, 2rem);
	gap: 0.5rem;
}
.card-body :where(p) {
	flex-grow: 1;
}
.card-actions {
	display: flex;
	flex-wrap: wrap;
	align-items: flex-start;
	gap: 0.5rem;
}
.card figure {
	display: flex;
	align-items: center;
	justify-content: center;
}
.card.image-full {
	display: grid;
}
.card.image-full:before {
	position: relative;
	content: '';
	z-index: 10;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	opacity: 0.75;
	border-radius: var(--rounded-box, 1rem);
}
.card.image-full:before,
.card.image-full > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.card.image-full > figure img {
	height: 100%;
	-o-object-fit: cover;
	object-fit: cover;
}
.card.image-full > .card-body {
	position: relative;
	z-index: 20;
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.checkbox {
	flex-shrink: 0;
	--chkbg: var(--bc);
	--chkfg: var(--b1);
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0.2;
	border-radius: var(--rounded-btn, 0.5rem);
}
.collapse {
	position: relative;
	display: grid;
	overflow: hidden;
}
.collapse-title,
.collapse > input[type='checkbox'],
.collapse-content {
	grid-column-start: 1;
	grid-row-start: 1;
}
.collapse > input[type='checkbox'] {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	opacity: 0;
}
.collapse-content {
	grid-row-start: 2;
	overflow: hidden;
	max-height: 0px;
	padding-left: 1rem;
	padding-right: 1rem;
	cursor: unset;
	transition: padding 0.2s ease-in-out, background-color 0.2s ease-in-out;
}
.collapse-open .collapse-content,
.collapse:focus:not(.collapse-close) .collapse-content,
.collapse:not(.collapse-close) input[type='checkbox']:checked ~ .collapse-content {
	max-height: 9000px;
}
.divider {
	display: flex;
	flex-direction: row;
	align-items: center;
	align-self: stretch;
	margin-top: 1rem;
	margin-bottom: 1rem;
	height: 1rem;
	white-space: nowrap;
}
.divider:before,
.divider:after {
	content: '';
	flex-grow: 1;
	height: 0.125rem;
	width: 100%;
}
.drawer {
	display: grid;
	width: 100%;
	overflow: hidden;
	height: 100vh;
	height: 100dvh;
}
.drawer.drawer-end {
	direction: rtl;
}
.drawer.drawer-end > * {
	direction: ltr;
}
.drawer.drawer-end > .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	justify-self: end;
}
.drawer.drawer-end > .drawer-toggle:checked ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
:where(.drawer-toggle ~ .drawer-content) {
	height: inherit;
}
.drawer-toggle {
	position: absolute;
	height: 0px;
	width: 0px;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	opacity: 0;
}
.drawer-toggle ~ .drawer-content {
	z-index: 0;
	grid-column-start: 1;
	grid-row-start: 1;
	overflow-y: auto;
	transition-property: all;
	transition-duration: 300ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.drawer-toggle ~ .drawer-side {
	grid-column-start: 1;
	grid-row-start: 1;
	display: grid;
	max-height: 100vh;
}
.drawer-toggle ~ .drawer-side > .drawer-overlay {
	visibility: hidden;
	grid-column-start: 1;
	grid-row-start: 1;
	opacity: 0;
	cursor: pointer;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	transition-property: all;
	transition-duration: 300ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	z-index: 10;
	grid-column-start: 1;
	grid-row-start: 1;
	--tw-translate-x: -100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	transition-property: all;
	transition-duration: 300ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.drawer-toggle:checked ~ .drawer-side {
	overflow-y: auto;
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
	visibility: visible;
	opacity: 0.999999;
	--tw-bg-opacity: 0.4;
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
[dir='rtl'] .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
[dir='rtl'] .drawer-toggle:checked ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
@media (min-width: 1024px) {
	.drawer-mobile {
		grid-auto-columns: -webkit-max-content auto;
		grid-auto-columns: max-content auto;
	}

	.drawer-mobile > .drawer-toggle ~ .drawer-content {
		height: auto;
	}

	@media (min-width: 1024px) {
		.drawer-mobile > .drawer-toggle ~ .drawer-content {
			grid-column-start: 2;
		}

		.drawer-mobile > .drawer-toggle ~ .drawer-side > .drawer-overlay {
			visibility: visible;
		}

		.drawer-mobile > .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
			--tw-translate-x: 0px;
			transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
				skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
				scaleY(var(--tw-scale-y));
		}

		.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-content {
			grid-column-start: 1;
		}

		.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-side {
			grid-column-start: 2;
		}

		.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-side > .drawer-overlay {
			visibility: visible;
		}

		.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
			--tw-translate-x: 0px;
			transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
				skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
				scaleY(var(--tw-scale-y));
		}
	}

	.drawer-mobile > .drawer-toggle ~ .drawer-side {
		overflow-y: auto;
	}

	.drawer-mobile.drawer-end {
		grid-auto-columns: auto -webkit-max-content;
		grid-auto-columns: auto max-content;
		direction: ltr;
	}

	.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-content {
		height: auto;
	}

	.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-side {
		overflow-y: auto;
	}

	.drawer-mobile > .drawer-toggle:checked ~ .drawer-content {
		--tw-translate-x: 0px;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
			skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
			scaleY(var(--tw-scale-y));
	}
}
.dropdown {
	position: relative;
	display: inline-block;
}
.dropdown > *:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.dropdown .dropdown-content {
	visibility: hidden;
	position: absolute;
	z-index: 50;
	opacity: 0;
	transform-origin: top;
	--tw-scale-x: 0.95;
	--tw-scale-y: 0.95;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.dropdown-end .dropdown-content {
	right: 0px;
}
.dropdown-left .dropdown-content {
	top: 0px;
	right: 100%;
	bottom: auto;
	transform-origin: right;
}
.dropdown-right .dropdown-content {
	left: 100%;
	top: 0px;
	bottom: auto;
	transform-origin: left;
}
.dropdown-top .dropdown-content {
	bottom: 100%;
	top: auto;
	transform-origin: bottom;
}
.dropdown-end.dropdown-right .dropdown-content {
	bottom: 0px;
	top: auto;
}
.dropdown-end.dropdown-left .dropdown-content {
	bottom: 0px;
	top: auto;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
	visibility: visible;
	opacity: 1;
}
.footer {
	display: grid;
	width: 100%;
	grid-auto-flow: row;
	place-items: start;
	row-gap: 2.5rem;
	-moz-column-gap: 1rem;
	column-gap: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.footer > * {
	display: grid;
	place-items: start;
	gap: 0.5rem;
}
.footer-center {
	place-items: center;
	text-align: center;
}
.footer-center > * {
	place-items: center;
}
@media (min-width: 48rem) {
	.footer {
		grid-auto-flow: column;
	}

	.footer-center {
		grid-auto-flow: row dense;
	}
}
.form-control {
	display: flex;
	flex-direction: column;
}
.label {
	display: flex;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	align-items: center;
	justify-content: space-between;
	padding-left: 0.25rem;
	padding-right: 0.25rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}
.hero-content {
	z-index: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	max-width: 80rem;
	gap: 1rem;
	padding: 1rem;
}
.input {
	flex-shrink: 1;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
}
.input-group > *,
.input-group > .input {
	border-radius: 0px;
}
.link {
	cursor: pointer;
	-webkit-text-decoration-line: underline;
	text-decoration-line: underline;
}
.menu {
	display: flex;
	flex-direction: column;
}
.menu.horizontal {
	display: inline-flex;
	flex-direction: row;
}
.menu.horizontal :where(li) {
	flex-direction: row;
}
.menu :where(li) {
	position: relative;
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	align-items: stretch;
}
.menu :where(li:not(.menu-title)) > :where(*:not(ul)) {
	display: flex;
}
.menu :where(li:not(.disabled):not(.menu-title)) > :where(*:not(ul)) {
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	align-items: center;
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.menu > :where(li > *:not(ul):focus) {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.menu > :where(li.disabled > *:not(ul):focus) {
	cursor: auto;
}
.menu > :where(li) :where(ul) {
	display: flex;
	flex-direction: column;
	align-items: stretch;
}
.menu > :where(li) > :where(ul) {
	position: absolute;
	display: none;
	top: initial;
	left: 100%;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: inherit;
}
.menu > :where(li:hover) > :where(ul) {
	display: flex;
}
.menu > :where(li:focus) > :where(ul) {
	display: flex;
}
.modal {
	pointer-events: none;
	visibility: hidden;
	position: fixed;
	top: 0px;
	right: 0px;
	bottom: 0px;
	left: 0px;
	display: flex;
	justify-content: center;
	opacity: 0;
	z-index: 999;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.4;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-property: transform, opacity;
	overflow-y: hidden;
	overscroll-behavior: contain;
}
:where(.modal) {
	align-items: center;
}
.modal-box {
	max-height: calc(100vh - 5em);
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	padding: 1.5rem;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	width: 91.666667%;
	max-width: 32rem;
	--tw-scale-x: 0.9;
	--tw-scale-y: 0.9;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	border-top-left-radius: var(--rounded-box, 1rem);
	border-top-right-radius: var(--rounded-box, 1rem);
	border-bottom-left-radius: var(--rounded-box, 1rem);
	border-bottom-right-radius: var(--rounded-box, 1rem);
	box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
	overflow-y: auto;
	overscroll-behavior: contain;
}
.modal-open,
.modal:target,
.modal-toggle:checked + .modal {
	pointer-events: auto;
	visibility: visible;
	opacity: 1;
}
.modal-toggle {
	position: fixed;
	height: 0px;
	width: 0px;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	opacity: 0;
}
.navbar {
	display: flex;
	align-items: center;
	padding: var(--navbar-padding, 0.5rem);
	min-height: 4rem;
	width: 100%;
}
:where(.navbar > *) {
	display: inline-flex;
	align-items: center;
}
.navbar-start {
	width: 50%;
	justify-content: flex-start;
}
.navbar-center {
	flex-shrink: 0;
}
.navbar-end {
	width: 50%;
	justify-content: flex-end;
}
.select {
	display: inline-flex;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	height: 3rem;
	padding-left: 1rem;
	padding-right: 2.5rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	min-height: 3rem;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	font-weight: 600;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	border-radius: var(--rounded-btn, 0.5rem);
	background-image: linear-gradient(45deg, transparent 50%, currentColor 50%),
		linear-gradient(135deg, currentColor 50%, transparent 50%);
	background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16px) calc(1px + 50%);
	background-size: 4px 4px, 4px 4px;
	background-repeat: no-repeat;
}
.select-disabled,
.select[disabled] {
	pointer-events: none;
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}
.select[multiple] {
	height: auto;
}
.swap {
	position: relative;
	display: inline-grid;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	place-content: center;
	cursor: pointer;
}
.swap > * {
	grid-column-start: 1;
	grid-row-start: 1;
	transition-duration: 300ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-property: transform, opacity;
}
.swap input {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
.swap .swap-on,
.swap .swap-indeterminate,
.swap input:indeterminate ~ .swap-on {
	opacity: 0;
}
.swap input:checked ~ .swap-off,
.swap.swap-active .swap-off,
.swap input:indeterminate ~ .swap-off {
	opacity: 0;
}
.swap input:checked ~ .swap-on,
.swap-active .swap-on,
.swap input:indeterminate ~ .swap-indeterminate {
	opacity: 1;
}
.tabs {
	display: flex;
	flex-wrap: wrap;
	align-items: flex-end;
}
.tab {
	position: relative;
	display: inline-flex;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	text-align: center;
	height: 2rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	--tab-padding: 1rem;
	--tw-text-opacity: 0.5;
	--tab-color: hsla(var(--bc) / var(--tw-text-opacity, 1));
	--tab-bg: hsla(var(--b1) / var(--tw-bg-opacity, 1));
	--tab-border-color: hsla(var(--b3) / var(--tw-bg-opacity, 1));
	color: var(--tab-color);
	padding-left: var(--tab-padding, 1rem);
	padding-right: var(--tab-padding, 1rem);
}
.table {
	position: relative;
	text-align: left;
}
.table th:first-child {
	position: sticky;
	position: -webkit-sticky;
	left: 0px;
	z-index: 11;
}
.textarea {
	flex-shrink: 1;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	padding-left: 1rem;
	padding-right: 1rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	min-height: 3rem;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: white;
	border-radius: var(--rounded-btn, 0.5rem);
}
.tooltip {
	position: relative;
	display: inline-block;
	--tooltip-offset: calc(100% + 1px + var(--tooltip-tail, 0px));
	text-align: center;
	--tooltip-tail: 3px;
	--tooltip-color: hsl(var(--n));
	--tooltip-text-color: hsl(var(--nc));
	--tooltip-tail-offset: calc(100% + 1px - var(--tooltip-tail));
}
.tooltip:before {
	position: absolute;
	pointer-events: none;
	content: attr(data-tip);
	transform: translateX(-50%);
	top: auto;
	left: 50%;
	right: auto;
	bottom: var(--tooltip-offset);
	max-width: 20rem;
	border-radius: 0.25rem;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	background-color: var(--tooltip-color);
	color: var(--tooltip-text-color);
	width: -webkit-max-content;
	width: -moz-max-content;
	width: max-content;
}
.avatar-group .avatar {
	overflow: hidden;
	border-radius: 9999px;
	border-width: 4px;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b1) / var(--tw-border-opacity));
}
.btn-outline .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-outline .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--nc) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-primary .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--p) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--p) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--pc) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-secondary .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--s) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--s) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--sc) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-accent .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-outline.btn-accent .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--a) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--a) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--ac) / var(--tw-text-opacity)) !important;
}
.btn-outline .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	background-color: transparent;
}
.btn-outline .\!badge.outline {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity)) !important;
	background-color: transparent !important;
}
.btn-outline.btn-primary .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-accent .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-error .badge-outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
	background-color: transparent;
	--tw-text-opacity: 1;
	color: hsl(var(--er) / var(--tw-text-opacity));
}
.btn-outline:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.btn-outline:hover .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
}
.btn-outline:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-outline:hover .\!badge.outline {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--nc) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-primary:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pc) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--pc) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--pc) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--p) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-primary:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .\!badge.outline {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--pc) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--pc) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-secondary:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sc) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--sc) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--sc) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--s) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-secondary:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sc) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover .\!badge.outline {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--sc) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--sc) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-accent:hover .badge {
	--tw-border-opacity: 1;
	border-color: hsl(var(--ac) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--ac) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover .\!badge {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--ac) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--ac) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--a) / var(--tw-text-opacity)) !important;
}
.btn-outline.btn-accent:hover .badge.outline {
	--tw-border-opacity: 1;
	border-color: hsl(var(--ac) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover .\!badge.outline {
	--tw-border-opacity: 1 !important;
	border-color: hsl(var(--ac) / var(--tw-border-opacity)) !important;
	--tw-bg-opacity: 1 !important;
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity)) !important;
	--tw-text-opacity: 1 !important;
	color: hsl(var(--ac) / var(--tw-text-opacity)) !important;
}
.btm-nav > *:where(.active) {
	border-top-width: 2px;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
.btm-nav > *.disabled,
.btm-nav > *.disabled:hover,
.btm-nav > *[disabled],
.btm-nav > *[disabled]:hover {
	pointer-events: none;
	--tw-border-opacity: 0;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	--tw-text-opacity: 0.2;
}
.btm-nav > * .label {
	font-size: 1rem;
	line-height: 1.5rem;
}
.breadcrumbs > ul > li > a:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.breadcrumbs > ul > li > a:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.breadcrumbs > ul > li + *:before {
	content: '';
	margin-left: 0.5rem;
	margin-right: 0.75rem;
	display: block;
	height: 0.375rem;
	width: 0.375rem;
	--tw-rotate: 45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	opacity: 0.4;
	border-top: 1px solid;
	border-right: 1px solid;
	background-color: transparent;
}
.btn:active:hover,
.btn:active:focus {
	-webkit-animation: none;
	animation: none;
	transform: scale(var(--btn-focus-scale, 0.95));
}
.btn:hover,
.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
}
.btn:focus-visible {
	outline: 2px solid hsl(var(--nf));
	outline-offset: 2px;
}
.btn-primary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-primary:hover,
.btn-primary.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
}
.btn-primary:focus-visible {
	outline: 2px solid hsl(var(--p));
}
.btn-secondary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-secondary:hover,
.btn-secondary.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sf, var(--s)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
}
.btn-secondary:focus-visible {
	outline: 2px solid hsl(var(--s));
}
.btn-accent {
	--tw-border-opacity: 1;
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-accent:hover,
.btn-accent.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--af, var(--a)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
}
.btn-accent:focus-visible {
	outline: 2px solid hsl(var(--a));
}
.btn-info:hover,
.btn-info.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--in) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
}
.btn-success:hover,
.btn-success.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--su) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--su) / var(--tw-bg-opacity));
}
.btn-warning:hover,
.btn-warning.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--wa) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--wa) / var(--tw-bg-opacity));
}
.btn-error {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--er) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}
.btn-error:hover,
.btn-error.btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--er) / var(--tw-bg-opacity));
}
.btn-error:focus-visible {
	outline: 2px solid hsl(var(--er));
}
.btn.glass:hover,
.btn.glass.btn-active {
	--glass-opacity: 25%;
	--glass-border-opacity: 15%;
}
.btn.glass:focus-visible {
	outline: 2px solid 0 0 2px currentColor;
}
.btn-ghost {
	border-width: 1px;
	border-color: transparent;
	background-color: transparent;
	color: currentColor;
}
.btn-ghost:hover,
.btn-ghost.btn-active {
	--tw-border-opacity: 0;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.2;
}
.btn-ghost:focus-visible {
	outline: 2px solid 0 0 2px currentColor;
}
.btn-link:hover,
.btn-link.btn-active {
	border-color: transparent;
	background-color: transparent;
	-webkit-text-decoration-line: underline;
	text-decoration-line: underline;
}
.btn-outline.btn-primary {
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover {
	--tw-border-opacity: 1;
	border-color: hsl(var(--pf, var(--p)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary {
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover {
	--tw-border-opacity: 1;
	border-color: hsl(var(--sf, var(--s)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-accent {
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover {
	--tw-border-opacity: 1;
	border-color: hsl(var(--af, var(--a)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-outline.btn-error {
	--tw-text-opacity: 1;
	color: hsl(var(--er) / var(--tw-text-opacity));
}
.btn-outline.btn-error:hover {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--er) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}
.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover {
	--tw-border-opacity: 0;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.2;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	--tw-text-opacity: 0.2;
}
.btn.loading.btn-square:before,
.btn.loading.btn-circle:before {
	margin-right: 0px;
}
.btn.loading.btn-xl:before,
.btn.loading.btn-lg:before {
	height: 1.25rem;
	width: 1.25rem;
}
.btn.loading.btn-sm:before,
.btn.loading.btn-xs:before {
	height: 0.75rem;
	width: 0.75rem;
}
.btn-group > input[type='radio']:checked.btn,
.btn-group > .btn-active {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-group > input[type='radio']:checked.btn:focus-visible,
.btn-group > .btn-active:focus-visible {
	outline: 2px solid hsl(var(--p));
}
.btn-group:not(.btn-group-vertical) > .btn:not(:first-of-type) {
	margin-left: -1px;
	border-top-left-radius: 0px;
	border-bottom-left-radius: 0px;
}
.btn-group:not(.btn-group-vertical) > .btn:not(:last-of-type) {
	border-top-right-radius: 0px;
	border-bottom-right-radius: 0px;
}
.btn-group-vertical > .btn:not(:first-of-type) {
	margin-top: -1px;
	border-top-left-radius: 0px;
	border-top-right-radius: 0px;
}
.btn-group-vertical > .btn:not(:last-of-type) {
	border-bottom-right-radius: 0px;
	border-bottom-left-radius: 0px;
}
@-webkit-keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.95));
	}

	40% {
		transform: scale(1.02);
	}

	100% {
		transform: scale(1);
	}
}
@keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.95));
	}

	40% {
		transform: scale(1.02);
	}

	100% {
		transform: scale(1);
	}
}
.card:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.card.bordered {
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
.card.compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-title {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	font-size: 1.25rem;
	line-height: 1.75rem;
	font-weight: 600;
}
.checkbox:focus-visible {
	outline: 2px solid hsl(var(--bc));
	outline-offset: 2px;
}
.checkbox:checked,
.checkbox[checked='true'] {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	background-repeat: no-repeat;
	-webkit-animation: checkmark var(--animation-input, 0.2s) ease-in-out;
	animation: checkmark var(--animation-input, 0.2s) ease-in-out;
	background-image: linear-gradient(-45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
		linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
		linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
		linear-gradient(
			45deg,
			hsl(var(--chkbg)) 30%,
			hsl(var(--chkfg)) 30.99%,
			hsl(var(--chkfg)) 40%,
			transparent 40.99%
		),
		linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
.checkbox:indeterminate {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	background-repeat: no-repeat;
	-webkit-animation: checkmark var(--animation-input, 0.2s) ease-in-out;
	animation: checkmark var(--animation-input, 0.2s) ease-in-out;
	background-image: linear-gradient(90deg, transparent 80%, hsl(var(--chkbg)) 80%),
		linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
		linear-gradient(
			0deg,
			hsl(var(--chkbg)) 43%,
			hsl(var(--chkfg)) 43%,
			hsl(var(--chkfg)) 57%,
			hsl(var(--chkbg)) 57%
		);
}
.checkbox:disabled {
	cursor: not-allowed;
	border-color: transparent;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	opacity: 0.2;
}
@-webkit-keyframes checkmark {
	0% {
		background-position-y: 5px;
	}

	50% {
		background-position-y: -2px;
	}

	100% {
		background-position-y: 0;
	}
}
@keyframes checkmark {
	0% {
		background-position-y: 5px;
	}

	50% {
		background-position-y: -2px;
	}

	100% {
		background-position-y: 0;
	}
}
body[dir='rtl'] .checkbox {
	--chkbg: var(--bc);
	--chkfg: var(--b1);
}
body[dir='rtl'] .checkbox:checked,
body[dir='rtl'] .checkbox[checked='true'] {
	background-image: linear-gradient(45deg, transparent 65%, hsl(var(--chkbg)) 65.99%),
		linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
		linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
		linear-gradient(
			-45deg,
			hsl(var(--chkbg)) 30%,
			hsl(var(--chkfg)) 30.99%,
			hsl(var(--chkfg)) 40%,
			transparent 40.99%
		),
		linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
.collapse:focus-visible {
	outline: 2px solid hsl(var(--nf));
	outline-offset: 2px;
}
.collapse-arrow .collapse-title:after {
	position: absolute;
	display: block;
	height: 0.5rem;
	width: 0.5rem;
	transition-property: all;
	transition-duration: 150ms;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	top: 1.4rem;
	right: 1.4rem;
	content: '';
	transform-origin: 75% 75%;
	transform: rotate(45deg);
	box-shadow: 2px 2px;
	pointer-events: none;
}
.collapse-plus .collapse-title:after {
	position: absolute;
	display: block;
	height: 0.5rem;
	width: 0.5rem;
	transition-property: all;
	transition-duration: 300ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	top: 0.9rem;
	right: 1.4rem;
	content: '+';
	pointer-events: none;
}
.collapse:not(.collapse-open):not(.collapse-close) input[type='checkbox'],
.collapse:not(.collapse-open):not(.collapse-close) .collapse-title {
	cursor: pointer;
}
.collapse:focus:not(.collapse-open):not(.collapse-close) .collapse-title {
	cursor: unset;
}
.collapse-title,
.collapse > input[type='checkbox'] {
	width: 100%;
	padding: 1rem;
	padding-right: 3rem;
	min-height: 3.75rem;
	transition: background-color 0.2s ease-in-out;
}
.collapse-open :where(.collapse-content),
.collapse:focus:not(.collapse-close) :where(.collapse-content),
.collapse:not(.collapse-close) :where(input[type='checkbox']:checked ~ .collapse-content) {
	padding-bottom: 1rem;
	transition: padding 0.2s ease-in-out, background-color 0.2s ease-in-out;
}
.collapse-open.collapse-arrow .collapse-title:after,
.collapse-arrow:focus:not(.collapse-close) .collapse-title:after,
.collapse-arrow:not(.collapse-close) input[type='checkbox']:checked ~ .collapse-title:after {
	transform: rotate(225deg);
}
.collapse-open.collapse-plus .collapse-title:after,
.collapse-plus:focus:not(.collapse-close) .collapse-title:after,
.collapse-plus:not(.collapse-close) input[type='checkbox']:checked ~ .collapse-title:after {
	content: '−';
}
.divider:before {
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
}
.divider:after {
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
}
.divider:not(:empty) {
	gap: 1rem;
}
.drawer.drawer-end > .drawer-toggle:checked ~ .drawer-content {
	--tw-translate-x: -0.5rem;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.drawer-toggle:checked ~ .drawer-content {
	--tw-translate-x: 0.5rem;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button {
	outline: 2px solid hsl(var(--nf));
	outline-offset: 2px;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-primary {
	outline: 2px solid hsl(var(--p));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-secondary {
	outline: 2px solid hsl(var(--s));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-accent {
	outline: 2px solid hsl(var(--a));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-info {
	outline: 2px solid hsl(var(--in));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-success {
	outline: 2px solid hsl(var(--su));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-warning {
	outline: 2px solid hsl(var(--wa));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-error {
	outline: 2px solid hsl(var(--er));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.glass {
	outline: 2px solid currentColor;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-ghost {
	outline: 2px solid currentColor;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-link {
	outline: 2px solid currentColor;
}
.dropdown.dropdown-open .dropdown-content,
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.label-text {
	font-size: 0.875rem;
	line-height: 1.25rem;
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.label a:hover {
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.input[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}
.input:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.input-disabled,
.input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}
.input-disabled::-moz-placeholder,
.input[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.input-disabled::placeholder,
.input[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.link:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.link:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.menu.horizontal li.bordered > a,
.menu.horizontal li.bordered > button,
.menu.horizontal li.bordered > span {
	border-left-width: 0px;
	border-bottom-width: 4px;
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu[class*=' p-'] li > *,
.menu[class^='p-'] li > * {
	border-radius: var(--rounded-btn, 0.5rem);
}
.menu :where(li.bordered > *) {
	border-left-width: 4px;
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu :where(li) > :where(*:not(ul)) {
	gap: 0.75rem;
	padding-left: 1rem;
	padding-right: 1rem;
	padding-top: 0.75rem;
	padding-bottom: 0.75rem;
	color: currentColor;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):focus),
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):hover) {
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
.menu :where(li:not(.menu-title):not(:empty)) > :where(*:not(ul):active) {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.menu :where(li:empty) {
	margin-left: 1rem;
	margin-right: 1rem;
	margin-top: 0.5rem;
	margin-bottom: 0.5rem;
	height: 1px;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	--tw-bg-opacity: 0.1;
}
.menu li.disabled > * {
	-webkit-user-select: none;
	-moz-user-select: none;
	user-select: none;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	--tw-text-opacity: 0.2;
}
.menu li.disabled > *:hover {
	background-color: transparent;
}
.menu li.hover-bordered a {
	border-left-width: 4px;
	border-color: transparent;
}
.menu li.hover-bordered a:hover {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.compact li > a,
.menu.compact li > span {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.menu .menu-title > * {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
	font-size: 0.75rem;
	line-height: 1rem;
	font-weight: 700;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	--tw-text-opacity: 0.4;
}
.menu :where(li:not(.disabled)) > :where(*:not(ul)) {
	outline: 2px solid transparent;
	outline-offset: 2px;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.menu > :where(li:first-child) {
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	border-bottom-right-radius: unset;
	border-bottom-left-radius: unset;
}
.menu > :where(li:first-child) > :where(:not(ul)) {
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	border-bottom-right-radius: unset;
	border-bottom-left-radius: unset;
}
.menu > :where(li:last-child) {
	border-top-left-radius: unset;
	border-top-right-radius: unset;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: inherit;
}
.menu > :where(li:last-child) > :where(:not(ul)) {
	border-top-left-radius: unset;
	border-top-right-radius: unset;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) :where(li) {
	width: 100%;
	white-space: nowrap;
}
.menu > :where(li) > :where(ul) :where(li) :where(ul) {
	padding-left: 1rem;
}
.menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
	width: 100%;
	white-space: nowrap;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) {
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	border-bottom-right-radius: unset;
	border-bottom-left-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	border-bottom-right-radius: unset;
	border-bottom-left-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) {
	border-top-left-radius: unset;
	border-top-right-radius: unset;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
	border-top-left-radius: unset;
	border-top-right-radius: unset;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: inherit;
}
.mockup-phone .display {
	overflow: hidden;
	border-radius: 40px;
	margin-top: -25px;
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box {
	--tw-translate-y: 0px;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
@-webkit-keyframes progress-loading {
	50% {
		left: 107%;
	}
}
@keyframes progress-loading {
	50% {
		left: 107%;
	}
}
@-webkit-keyframes radiomark {
	0% {
		box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
	}

	50% {
		box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
	}

	100% {
		box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
	}
}
@keyframes radiomark {
	0% {
		box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
	}

	50% {
		box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
	}

	100% {
		box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
	}
}
@-webkit-keyframes rating-pop {
	0% {
		transform: translateY(-0.125em);
	}

	40% {
		transform: translateY(-0.125em);
	}

	100% {
		transform: translateY(0);
	}
}
@keyframes rating-pop {
	0% {
		transform: translateY(-0.125em);
	}

	40% {
		transform: translateY(-0.125em);
	}

	100% {
		transform: translateY(0);
	}
}
.select:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.select-disabled::-moz-placeholder,
.select[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.select-disabled::placeholder,
.select[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.select-multiple,
.select[multiple],
.select[size].select:not([size='1']) {
	background-image: none;
	padding-right: 1rem;
}
.swap-rotate .swap-on,
.swap-rotate .swap-indeterminate,
.swap-rotate input:indeterminate ~ .swap-on {
	--tw-rotate: 45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.swap-rotate input:checked ~ .swap-off,
.swap-rotate.swap-active .swap-off,
.swap-rotate input:indeterminate ~ .swap-off {
	--tw-rotate: -45deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.swap-rotate input:checked ~ .swap-on,
.swap-rotate.swap-active .swap-on,
.swap-rotate input:indeterminate ~ .swap-indeterminate {
	--tw-rotate: 0deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.swap-flip .swap-on,
.swap-flip .swap-indeterminate,
.swap-flip input:indeterminate ~ .swap-on {
	transform: rotateY(180deg);
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	opacity: 1;
}
.swap-flip input:checked ~ .swap-off,
.swap-flip.swap-active .swap-off,
.swap-flip input:indeterminate ~ .swap-off {
	transform: rotateY(-180deg);
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	opacity: 1;
}
.swap-flip input:checked ~ .swap-on,
.swap-flip.swap-active .swap-on,
.swap-flip input:indeterminate ~ .swap-indeterminate {
	transform: rotateY(0deg);
}
.tab:hover {
	--tw-text-opacity: 1;
}
.tab.tab-active {
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 1;
	--tw-text-opacity: 1;
}
.tab:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.tab:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: -3px;
}
.tab:focus-visible.tab-lifted {
	border-bottom-right-radius: var(--tab-radius, 0.5rem);
	border-bottom-left-radius: var(--tab-radius, 0.5rem);
}
.tab-lifted.tab-active {
	background-color: var(--tab-bg);
	border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
	border-left-color: var(--tab-border-color);
	border-right-color: var(--tab-border-color);
	border-top-color: var(--tab-border-color);
	padding-left: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
	padding-right: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
	padding-bottom: var(--tab-border, 1px);
	padding-top: 0;
}
.tab-lifted.tab-active:before,
.tab-lifted.tab-active:after {
	z-index: 1;
	content: '';
	display: block;
	position: absolute;
	width: var(--tab-radius, 0.5rem);
	height: var(--tab-radius, 0.5rem);
	bottom: 0;
	--tab-grad: calc(68% - var(--tab-border, 1px));
	--tab-corner-bg: radial-gradient(
		circle at var(--circle-pos),
		transparent var(--tab-grad),
		var(--tab-border-color) calc(var(--tab-grad) + 0.3px),
		var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
		var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.3px)
	);
}
.tab-lifted.tab-active:before {
	left: calc(var(--tab-radius, 0.5rem) * -1);
	--circle-pos: top left;
	background-image: var(--tab-corner-bg);
}
[dir='rtl'] .tab-lifted.tab-active:before {
	--circle-pos: top right;
}
.tab-lifted.tab-active:after {
	right: calc(var(--tab-radius, 0.5rem) * -1);
	--circle-pos: top right;
	background-image: var(--tab-corner-bg);
}
[dir='rtl'] .tab-lifted.tab-active:after {
	--circle-pos: top left;
}
.tab-lifted.tab-active:first-child:before {
	background: none;
}
.tab-lifted.tab-active:last-child:after {
	background: none;
}
.tab-lifted.tab-active + .tab-lifted.tab-active:before {
	background: none;
}
.tabs-boxed {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	padding: 0.25rem;
	border-radius: var(--rounded-btn, 0.5rem);
}
.tabs-boxed .tab-active {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
}
.tabs-boxed .tab-active:hover {
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.table :where(th, td) {
	white-space: nowrap;
	padding: 1rem;
	vertical-align: middle;
}
.table tr.active th,
.table tr.active td,
.table tr.active:nth-child(even) th,
.table tr.active:nth-child(even) td {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
.table tr.hover:hover th,
.table tr.hover:hover td,
.table tr.hover:nth-child(even):hover th,
.table tr.hover:nth-child(even):hover td {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
.table:where(:not(.table-zebra))
	:where(thead, tbody, tfoot)
	:where(tr:not(:last-child) :where(th, td)) {
	border-bottom-width: 1px;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
.table :where(thead, tfoot) :where(th, td) {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	font-size: 0.75rem;
	line-height: 1rem;
	font-weight: 700;
	text-transform: uppercase;
}
.table :where(:first-child) :where(:first-child) :where(th, td):first-child {
	border-top-left-radius: 0.5rem;
}
.table :where(:first-child) :where(:first-child) :where(th, td):last-child {
	border-top-right-radius: 0.5rem;
}
.table :where(:last-child) :where(:last-child) :where(th, td):first-child {
	border-bottom-left-radius: 0.5rem;
}
.table :where(:last-child) :where(:last-child) :where(th, td):last-child {
	border-bottom-right-radius: 0.5rem;
}
.table :where(tbody th, tbody td) {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
.textarea:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.textarea-secondary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
}
.textarea-secondary:focus {
	outline: 2px solid hsl(var(--s));
}
.textarea-error {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
}
.textarea-error:focus {
	outline: 2px solid hsl(var(--er));
}
.textarea-disabled,
.textarea[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}
.textarea-disabled::-moz-placeholder,
.textarea[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.textarea-disabled::placeholder,
.textarea[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}
.tooltip:before,
.tooltip:after {
	opacity: 0;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-delay: 100ms;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.tooltip:after {
	position: absolute;
	content: '';
	border-style: solid;
	border-width: var(--tooltip-tail, 0);
	width: 0;
	height: 0;
	display: block;
	transform: translateX(-50%);
	border-color: var(--tooltip-color) transparent transparent transparent;
	top: auto;
	left: 50%;
	right: auto;
	bottom: var(--tooltip-tail-offset);
}
.tooltip.tooltip-open:before,
.tooltip.tooltip-open:after,
.tooltip:hover:before,
.tooltip:hover:after {
	opacity: 1;
	transition-delay: 75ms;
}
.tooltip-primary {
	--tooltip-color: hsl(var(--p));
	--tooltip-text-color: hsl(var(--pc));
}
.tooltip-error {
	--tooltip-color: hsla(var(--er));
	--tooltip-text-color: hsl(var(--erc));
}

.prose :where(code):not(:where([class~='not-prose'] *)) {
	padding: 2px 8px;
	border-radius: var(--rounded-badge);
}
.prose code:after,
.prose code:before {
	content: none;
}
.prose pre code {
	border-radius: none;
	padding: 0;
}
.prose :where(tbody tr, thead):not(:where([class~='not-prose'] *)) {
	border-bottom-color: hsl(var(--bc) / 20%);
}
.rounded-box {
	border-radius: var(--rounded-box, 1rem);
}
.text-2xs {
	font-size: 0.7rem;
}
.glass,
.glass:hover,
.glass.btn-active {
	border: none;
	-webkit-backdrop-filter: blur(var(--glass-blur, 40px));
	backdrop-filter: blur(var(--glass-blur, 40px));
	background-color: transparent;
	background-image: linear-gradient(
			135deg,
			rgb(255 255 255 / var(--glass-opacity, 30%)) 0%,
			rgb(0 0 0 / 0%) 100%
		),
		linear-gradient(
			var(--glass-reflex-degree, 100deg),
			rgb(255 255 255 / var(--glass-reflex-opacity, 10%)) 25%,
			rgb(0 0 0 / 0%) 25%
		);
	box-shadow: 0 0 0 1px rgb(255 255 255 / var(--glass-border-opacity, 10%)) inset,
		0 0 0 2px rgb(0 0 0 / 5%);
	text-shadow: 0 1px rgb(0 0 0 / var(--glass-text-shadow-opacity, 5%));
}
.badge-lg {
	height: 1.5rem;
	font-size: 1rem;
	line-height: 1.5rem;
	padding-left: 0.688rem;
	padding-right: 0.688rem;
}
.btm-nav-xs > *:where(.active) {
	border-top-width: 1px;
}
.btm-nav-sm > *:where(.active) {
	border-top-width: 2px;
}
.btm-nav-md > *:where(.active) {
	border-top-width: 2px;
}
.btm-nav-lg > *:where(.active) {
	border-top-width: 4px;
}
.btn-xs {
	height: 1.5rem;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	min-height: 1.5rem;
	font-size: 0.75rem;
}
.btn-sm {
	height: 2rem;
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	min-height: 2rem;
	font-size: 0.875rem;
}
.btn-square:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	padding: 0px;
}
.btn-square:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	padding: 0px;
}
.btn-square:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	padding: 0px;
}
.btn-square:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	padding: 0px;
}
.btn-circle:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	border-radius: 9999px;
	padding: 0px;
}
.btn-circle:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	border-radius: 9999px;
	padding: 0px;
}
.btn-circle:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	border-radius: 9999px;
	padding: 0px;
}
.btn-circle:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	border-radius: 9999px;
	padding: 0px;
}
.divider-horizontal {
	flex-direction: column;
}
.divider-horizontal:before {
	height: 100%;
	width: 0.125rem;
}
.divider-horizontal:after {
	height: 100%;
	width: 0.125rem;
}
.menu-horizontal {
	display: inline-flex;
	flex-direction: row;
}
.menu-horizontal :where(li) {
	flex-direction: row;
}
.menu-horizontal > :where(li) > :where(ul) {
	top: 100%;
	left: initial;
}
.modal-bottom {
	align-items: flex-end;
}
.tab-sm {
	height: 1.5rem;
	font-size: 0.875rem;
	line-height: 0.75rem;
	--tab-padding: 0.75rem;
}
.avatar.online:before {
	content: '';
	position: absolute;
	z-index: 10;
	display: block;
	border-radius: 9999px;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--su) / var(--tw-bg-opacity));
	width: 15%;
	height: 15%;
	top: 7%;
	right: 7%;
	box-shadow: 0 0 0 2px hsl(var(--b1));
}
.avatar.offline:before {
	content: '';
	position: absolute;
	z-index: 10;
	display: block;
	border-radius: 9999px;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
	width: 15%;
	height: 15%;
	top: 7%;
	right: 7%;
	box-shadow: 0 0 0 2px hsl(var(--b1));
}
.badge-primary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.badge-secondary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.badge-accent {
	--tw-border-opacity: 1;
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.badge-success {
	border-color: transparent;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--su) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
}
.badge-outline.badge-primary {
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.badge-outline.badge-secondary {
	--tw-text-opacity: 1;
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.badge-outline.badge-accent {
	--tw-text-opacity: 1;
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.badge-outline.badge-success {
	--tw-text-opacity: 1;
	color: hsl(var(--su) / var(--tw-text-opacity));
}
.card-compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-compact .card-title {
	margin-bottom: 0.25rem;
}
.card-normal .card-body {
	padding: var(--padding-card, 2rem);
	font-size: 1rem;
	line-height: 1.5rem;
}
.card-normal .card-title {
	margin-bottom: 0.75rem;
}
.divider-horizontal {
	margin-top: 0px;
	margin-bottom: 0px;
	margin-left: 1rem;
	margin-right: 1rem;
	height: auto;
	width: 1rem;
}
.menu-horizontal :where(li.bordered > *) {
	border-left-width: 0px;
	border-bottom-width: 4px;
}
.menu-horizontal > :where(li:first-child) {
	border-top-left-radius: inherit;
	border-top-right-radius: unset;
	border-bottom-right-radius: unset;
	border-bottom-left-radius: inherit;
}
.menu-horizontal > :where(li:first-child) > :where(*:not(ul)) {
	border-top-left-radius: inherit;
	border-top-right-radius: unset;
	border-bottom-right-radius: unset;
	border-bottom-left-radius: inherit;
}
.menu-horizontal > :where(li:last-child) {
	border-top-left-radius: unset;
	border-top-right-radius: inherit;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: unset;
}
.menu-horizontal > :where(li:last-child) > :where(*:not(ul)) {
	border-top-left-radius: unset;
	border-top-right-radius: inherit;
	border-bottom-right-radius: inherit;
	border-bottom-left-radius: unset;
}
.modal-bottom :where(.modal-box) {
	width: 100%;
	max-width: none;
	--tw-translate-y: 2.5rem;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	border-bottom-right-radius: 0px;
	border-bottom-left-radius: 0px;
}
.modal-middle :where(.modal-box) {
	width: 91.666667%;
	max-width: 32rem;
	--tw-translate-y: 0px;
	--tw-scale-x: 0.9;
	--tw-scale-y: 0.9;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
	border-bottom-left-radius: var(--rounded-box, 1rem);
	border-bottom-right-radius: var(--rounded-box, 1rem);
}
.table-compact :where(th, td) {
	padding: 0.5rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.pointer-events-none {
	pointer-events: none;
}
.static {
	position: static;
}
.fixed {
	position: fixed;
}
.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.sticky {
	position: -webkit-sticky;
	position: sticky;
}
.bottom-0 {
	bottom: 0px;
}
.left-0 {
	left: 0px;
}
.right-0 {
	right: 0px;
}
.top-\[80vh\] {
	top: 80vh;
}
.top-0 {
	top: 0px;
}
.z-30 {
	z-index: 30;
}
.z-10 {
	z-index: 10;
}
.col-start-1 {
	grid-column-start: 1;
}
.row-start-1 {
	grid-row-start: 1;
}
.m-1 {
	margin: 0.25rem;
}
.mx-auto {
	margin-left: auto;
	margin-right: auto;
}
.mx-0 {
	margin-left: 0px;
	margin-right: 0px;
}
.my-4 {
	margin-top: 1rem;
	margin-bottom: 1rem;
}
.my-1 {
	margin-top: 0.25rem;
	margin-bottom: 0.25rem;
}
.my-2 {
	margin-top: 0.5rem;
	margin-bottom: 0.5rem;
}
.-mx-6 {
	margin-left: -1.5rem;
	margin-right: -1.5rem;
}
.ml-2 {
	margin-left: 0.5rem;
}
.mr-0 {
	margin-right: 0px;
}
.ml-auto {
	margin-left: auto;
}
.mb-4 {
	margin-bottom: 1rem;
}
.mr-2 {
	margin-right: 0.5rem;
}
.ml-4 {
	margin-left: 1rem;
}
.-mt-\[5\.5rem\] {
	margin-top: -5.5rem;
}
.mb-2 {
	margin-bottom: 0.5rem;
}
.mt-4 {
	margin-top: 1rem;
}
.mb-5 {
	margin-bottom: 1.25rem;
}
.block {
	display: block;
}
.inline-block {
	display: inline-block;
}
.inline {
	display: inline;
}
.flex {
	display: flex;
}
.inline-flex {
	display: inline-flex;
}
.table {
	display: table;
}
.grid {
	display: grid;
}
.hidden {
	display: none;
}
.h-20 {
	height: 5rem;
}
.h-auto {
	height: auto;
}
.h-6 {
	height: 1.5rem;
}
.h-10 {
	height: 2.5rem;
}
.h-full {
	height: 100%;
}
.h-12 {
	height: 3rem;
}
.h-16 {
	height: 4rem;
}
.h-5 {
	height: 1.25rem;
}
.h-\[50vh\] {
	height: 50vh;
}
.max-h-\[70vh\] {
	max-height: 70vh;
}
.min-h-\[300px\] {
	min-height: 300px;
}
.w-80 {
	width: 20rem;
}
.w-6 {
	width: 1.5rem;
}
.w-10 {
	width: 2.5rem;
}
.w-full {
	width: 100%;
}
.w-52 {
	width: 13rem;
}
.w-32 {
	width: 8rem;
}
.w-5 {
	width: 1.25rem;
}
.w-1\/2 {
	width: 50%;
}
.w-96 {
	width: 24rem;
}
.max-w-full {
	max-width: 100%;
}
.max-w-xs {
	max-width: 20rem;
}
.max-w-4xl {
	max-width: 56rem;
}
.max-w-3xl {
	max-width: 48rem;
}
.flex-1 {
	flex: 1 1 0%;
}
.flex-none {
	flex: none;
}
.flex-shrink {
	flex-shrink: 1;
}
.rotate-90 {
	--tw-rotate: 90deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.rotate-180 {
	--tw-rotate: 180deg;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}
.cursor-pointer {
	cursor: pointer;
}
.flex-row {
	flex-direction: row;
}
.flex-col {
	flex-direction: column;
}
.flex-wrap {
	flex-wrap: wrap;
}
.place-items-center {
	place-items: center;
}
.items-end {
	align-items: flex-end;
}
.items-center {
	align-items: center;
}
.justify-start {
	justify-content: flex-start;
}
.justify-end {
	justify-content: flex-end;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}
.gap-10 {
	gap: 2.5rem;
}
.gap-1 {
	gap: 0.25rem;
}
.gap-2 {
	gap: 0.5rem;
}
.gap-4 {
	gap: 1rem;
}
.gap-6 {
	gap: 1.5rem;
}
.gap-5 {
	gap: 1.25rem;
}
.gap-3 {
	gap: 0.75rem;
}
.gap-y-2 {
	row-gap: 0.5rem;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(0.5rem * var(--tw-space-x-reverse));
	margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(0.75rem * var(--tw-space-x-reverse));
	margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.self-center {
	align-self: center;
}
.overflow-hidden {
	overflow: hidden;
}
.overflow-scroll {
	overflow: scroll;
}
.overflow-x-auto {
	overflow-x: auto;
}
.overflow-y-auto {
	overflow-y: auto;
}
.rounded {
	border-radius: 0.25rem;
}
.rounded-sm {
	border-radius: 0.125rem;
}
.rounded-lg {
	border-radius: 0.5rem;
}
.rounded-b-md {
	border-bottom-right-radius: 0.375rem;
	border-bottom-left-radius: 0.375rem;
}
.rounded-t-md {
	border-top-left-radius: 0.375rem;
	border-top-right-radius: 0.375rem;
}
.rounded-r-none {
	border-top-right-radius: 0px;
	border-bottom-right-radius: 0px;
}
.rounded-l-none {
	border-top-left-radius: 0px;
	border-bottom-left-radius: 0px;
}
.border-2 {
	border-width: 2px;
}
.border {
	border-width: 1px;
}
.border-b-0 {
	border-bottom-width: 0px;
}
.border-t-4 {
	border-top-width: 4px;
}
.border-black {
	--tw-border-opacity: 1;
	border-color: rgb(0 0 0 / var(--tw-border-opacity));
}
.border-primary {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.bg-base-300 {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
.bg-base-200 {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
}
.bg-primary {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
}
.bg-base-100 {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
.bg-opacity-90 {
	--tw-bg-opacity: 0.9;
}
.bg-gradient-to-t {
	background-image: linear-gradient(to top, var(--tw-gradient-stops));
}
.bg-gradient-to-br {
	background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}
.from-base-200 {
	--tw-gradient-from: hsl(var(--b2, var(--b1)));
	--tw-gradient-to: hsl(var(--b2, var(--b1)) / 0);
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-primary {
	--tw-gradient-from: hsl(var(--p));
	--tw-gradient-to: hsl(var(--p) / 0);
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.to-transparent {
	--tw-gradient-to: transparent;
}
.to-secondary {
	--tw-gradient-to: hsl(var(--s));
}
.fill-current {
	fill: currentColor;
}
.fill-secondary {
	fill: hsl(var(--s));
}
.stroke-info {
	stroke: hsl(var(--in));
}
.stroke-current {
	stroke: currentColor;
}
.p-6 {
	padding: 1.5rem;
}
.p-2 {
	padding: 0.5rem;
}
.p-3 {
	padding: 0.75rem;
}
.p-4 {
	padding: 1rem;
}
.p-1 {
	padding: 0.25rem;
}
.p-0 {
	padding: 0px;
}
.px-8 {
	padding-left: 2rem;
	padding-right: 2rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}
.py-3 {
	padding-top: 0.75rem;
	padding-bottom: 0.75rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.pb-16 {
	padding-bottom: 4rem;
}
.pl-4 {
	padding-left: 1rem;
}
.pb-24 {
	padding-bottom: 6rem;
}
.pt-40 {
	padding-top: 10rem;
}
.pb-40 {
	padding-bottom: 10rem;
}
.pt-4 {
	padding-top: 1rem;
}
.text-center {
	text-align: center;
}
.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}
.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}
.font-bold {
	font-weight: 700;
}
.font-semibold {
	font-weight: 600;
}
.font-extrabold {
	font-weight: 800;
}
.font-medium {
	font-weight: 500;
}
.uppercase {
	text-transform: uppercase;
}
.lowercase {
	text-transform: lowercase;
}
.normal-case {
	text-transform: none;
}
.italic {
	font-style: italic;
}
.leading-8 {
	line-height: 2rem;
}
.leading-6 {
	line-height: 1.5rem;
}
.tracking-wide {
	letter-spacing: 0.025em;
}
.text-base-content {
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.text-primary-content {
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.text-gray-700 {
	--tw-text-opacity: 1;
	color: rgb(55 65 81 / var(--tw-text-opacity));
}
.text-blue-800 {
	--tw-text-opacity: 1;
	color: rgb(30 64 175 / var(--tw-text-opacity));
}
.text-neutral-content {
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.opacity-50 {
	opacity: 0.5;
}
.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.filter {
	filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale)
		var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.backdrop-blur {
	--tw-backdrop-blur: blur(8px);
	-webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
		var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
		var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
		var(--tw-backdrop-sepia);
	backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)
		var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
		var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.transition {
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.transition-all {
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
.duration-100 {
	transition-duration: 100ms;
}

html,
body {
	background-color: white;
}

:root {
	--tw-border-opacity: 1;
	--date-picker-background: hsl(var(--b1));
	--date-picker-foreground: hsl(var(--bc));
	--date-input-width: 100%;
	--date-picker-highlight-border: hsl(var(--p) / var(--tw-border-opacity));
}
/* 
  Using my toast implementation submitted for
  addition to the DaisyUI library while Pull Request
  remains pending
*/
.toast {
	border-radius: var(--rounded-box, 1rem);
	position: relative;
	display: flex;
	width: auto;
	max-width: 400px;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	gap: 0.5rem;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	padding: 0.5rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.toast-info {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--in) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--inc, var(--nc)) / var(--tw-text-opacity));
}

.toast-success {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--su) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--suc, var(--nc)) / var(--tw-text-opacity));
}

.toast-warning {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--wa) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--wac, var(--nc)) / var(--tw-text-opacity));
}

.toast-error {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--er) / var(--tw-bg-opacity));
	--tw-text-opacity: 1;
	color: hsl(var(--erc, var(--nc)) / var(--tw-text-opacity));
}

.toast-sm {
	margin-bottom: 0.5rem;
	padding: 0.5rem;
}

.toast-control-top-right {
	top: 0.25rem;
	right: 0.25rem;
}

.toast-control-top-left {
	top: 0.25rem;
	left: 0.25rem;
}

.toast-control {
	position: fixed;
	display: flex;
	max-width: 400px;
	flex-direction: column;
}

.toast-control > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

@media (min-width: 768px) {
	.toast-control > :not([hidden]) ~ :not([hidden]) {
		--tw-space-y-reverse: 0;
		margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
		margin-bottom: calc(1rem * var(--tw-space-y-reverse));
	}
}

.date-time-field > input {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}

.date-time-field > input:focus {
	outline: 2px solid hsl(var(--p));
}

.date-time-field > input {
	height: 3rem;
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}

/* slightly transparent fallback for Firefox (not supporting backdrop-filter) */
@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
	.backdrop-filter {
		background-color: rgb(255 255 255 / 0.6);
	}
	.dark .backdrop-filter {
		background-color: rgb(15 15 15 / 0.6);
	}
}

.glassmorphicCard {
	border-radius: 0.5rem;
	background-color: rgb(250 250 250 / 0.7);
}

.dark .glassmorphicCard {
	background-color: rgb(15 15 15 / 0.7);
}

/* if backdrop support: very transparent and blurred */
@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
	.glassmorphicCard {
		border-radius: 0.5rem;
		background-color: rgb(107 114 128 / 0.4);
		--tw-backdrop-blur: blur(24px);
		-webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
			var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
			var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
			var(--tw-backdrop-sepia);
		backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
			var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
			var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
			var(--tw-backdrop-sepia);
	}
	@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
		.glassmorphicCard {
			background-color: rgb(255 255 255 / 0.6);
		}
		.dark .glassmorphicCard {
			background-color: rgb(15 15 15 / 0.6);
		}
	}
	.dark .glassmorphicCard {
		background-color: rgb(27 27 27 / 0.4);
		--tw-backdrop-blur: blur(40px);
		-webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
			var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
			var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
			var(--tw-backdrop-sepia);
		backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
			var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
			var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
			var(--tw-backdrop-sepia);
	}
}

@media (min-width: 768px) {
	.listContainer {
		height: calc(100vh - 8rem);
		display: flex;
		flex-direction: column;
	}
}

.listContainer {
	height: calc(100vh - 10.5rem);
	display: flex;
	flex-direction: column;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: 300;
	line-height: 1.25;
}

h1 {
	font-size: 3rem;
	line-height: 1;
}

h2 {
	font-size: 2.25rem;
	line-height: 2.5rem;
}

h3 {
	font-size: 1.875rem;
	line-height: 2.25rem;
}

h4 {
	font-size: 1.5rem;
	line-height: 2rem;
}

h5 {
	font-size: 1.25rem;
	line-height: 1.75rem;
}

h6 {
	font-size: 1rem;
	line-height: 1.5rem;
}

nav a[aria-current] {
	display: inline-block;
}

nav a[aria-current]::after {
	position: relative;
	content: '';
	width: 100%;
	height: 2px;
	background-color: #3b82f6;
	display: block;
	bottom: -2px;
}

.appContent {
	width: 100%;
	padding-top: 3rem;
}

@media (min-width: 768px) {
	.appContent {
		padding-top: 3.5rem;
	}
}

.glassmorphicBg {
	background-color: rgb(209 213 219 / 0.6);
}

.dark .glassmorphicBg {
	background-color: rgb(209 213 219 / 0.7);
}

@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
	.glassmorphicBg {
		background-color: rgb(107 114 128 / 0.1);
		--tw-backdrop-blur: blur(12px);
		-webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
			var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
			var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
			var(--tw-backdrop-sepia);
		backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
			var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
			var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
			var(--tw-backdrop-sepia);
	}
	@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
		.glassmorphicBg {
			background-color: rgb(255 255 255 / 0.6);
		}
		.dark .glassmorphicBg {
			background-color: rgb(15 15 15 / 0.6);
		}
	}
	.dark .glassmorphicBg {
		background-color: rgb(255 255 255 / 0.1);
	}
}

div.multiselect {
	flex-shrink: 1;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
}

div.multiselect-group > *,
div.multiselect-group > .input {
	border-radius: 0px;
}

div.multiselect[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}

div.multiselect {
	--tw-border-opacity: 0.2;
}

div.multiselect:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}

div.multiselect {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}

div.multiselect:focus {
	outline: 2px solid hsl(var(--p));
}

div.multiselect-disabled,
div.multiselect[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}

div.multiselect-disabled::-moz-placeholder,
div.multiselect[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}

div.multiselect-disabled::placeholder,
div.multiselect[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}

div.multiselect {
	width: 100%;
	max-width: 20rem;
	font-size: 1rem;
	line-height: 1.5rem;
}

div.multiselect > ul.options {
	max-height: 5rem;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}

div.multiselect > ul.selected {
	height: 100%;
	overflow: scroll;
	font-size: 1rem;
	line-height: 1.5rem;
}

.form-field {
	flex-shrink: 1;
	transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
		transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
		opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
		-webkit-backdrop-filter;
	transition-duration: 200ms;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
	border-width: 1px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
}

.form-field-group > *,
.form-field-group > .input {
	border-radius: 0px;
}

.form-field[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}

.form-field {
	--tw-border-opacity: 0.2;
}

.form-field:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}

.form-field {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}

.form-field:focus {
	outline: 2px solid hsl(var(--p));
}

.form-field-disabled,
.form-field[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	--tw-text-opacity: 0.2;
}

.form-field-disabled::-moz-placeholder,
.form-field[disabled]::-moz-placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}

.form-field-disabled::placeholder,
.form-field[disabled]::placeholder {
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
	--tw-placeholder-opacity: 0.2;
}

.form-field {
	width: 100%;
	max-width: 20rem;
	font-size: 1rem;
	line-height: 1.5rem;
}

.form-error {
	text-align: center;
	font-size: 0.875rem;
	line-height: 1.25rem;
	--tw-text-opacity: 1;
	color: hsl(var(--er) / var(--tw-text-opacity));
}

.progress-container {
	display: flex;
	justify-content: space-between;
	position: relative;
	margin-bottom: 30px;
	max-width: 100%;
	width: 350px;
}

.progress-container::before {
	content: '';
	background-color: #e0e0e0;
	position: absolute;
	top: 50%;
	left: 0;
	transform: translateY(-50%);
	height: 4px;
	width: 100%;
	z-index: -1;
}

.progress {
	background-color: #3498db;
	position: absolute;
	top: 50%;
	left: 0;
	transform: translateY(-50%);
	height: 4px;
	width: 0%;
	z-index: -1;
	transition: 0.4s ease;
}

.circle {
	background-color: #fff;
	color: #999;
	border-radius: 50%;
	height: 30px;
	width: 30px;
	display: flex;
	align-items: center;
	justify-content: center;
	border: 3px solid #e0e0e0;
	transition: 0.4s ease;
	cursor: pointer;
}

.circle::after {
	content: attr(data-title) ' ';
	position: absolute;
	bottom: 35px;
	color: #999;
	transition: 0.4s ease;
}

.circle.active::after {
	color: #3498db;
}

.circle.active {
	border-color: #3498db;
}

.invalid,
.bar {
	border: 1px solid red;
}

.valid,
.foo {
	border: 1px solid green;
}

.dirty {
	border: 1px dashed black;
}

.list {
	flex-grow: 1;
}

.list .virtual-list-wrapper {
	overflow-y: scroll;
	overflow-x: hidden;
	white-space: nowrap;
}

.basicContainer {
	height: 100%;
	width: 100%;
}

.wave {
	width: 5px;
	height: 30%;
	background: linear-gradient(45deg, black, red);
	margin: 10px;
	-webkit-animation: wave 1s linear infinite;
	animation: wave 1s linear infinite;
	border-radius: 20px;
}

.wave:nth-child(2) {
	-webkit-animation-delay: 0.1s;
	animation-delay: 0.1s;
}
.wave:nth-child(3) {
	-webkit-animation-delay: 0.2s;
	animation-delay: 0.2s;
}
.wave:nth-child(4) {
	-webkit-animation-delay: 0.3s;
	animation-delay: 0.3s;
}
.wave:nth-child(5) {
	-webkit-animation-delay: 0.4s;
	animation-delay: 0.4s;
}
.wave:nth-child(6) {
	-webkit-animation-delay: 0.5s;
	animation-delay: 0.5s;
}
.wave:nth-child(7) {
	-webkit-animation-delay: 0.6s;
	animation-delay: 0.6s;
}
.wave:nth-child(8) {
	-webkit-animation-delay: 0.7s;
	animation-delay: 0.7s;
}
.wave:nth-child(9) {
	-webkit-animation-delay: 0.8s;
	animation-delay: 0.8s;
}
.wave:nth-child(10) {
	-webkit-animation-delay: 0.9s;
	animation-delay: 0.9s;
}

@-webkit-keyframes wave {
	0% {
		transform: scale(0);
	}
	50% {
		transform: scale(1);
	}
	100% {
		transform: scale(0);
	}
}

@keyframes wave {
	0% {
		transform: scale(0);
	}
	50% {
		transform: scale(1);
	}
	100% {
		transform: scale(0);
	}
}

.placeholder\:text-primary-content::-moz-placeholder {
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}

.placeholder\:text-primary-content::placeholder {
	--tw-text-opacity: 1;
	color: hsl(var(--pc) / var(--tw-text-opacity));
}

.hover\:bg-gray-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.focus\:bg-gray-100:focus {
	--tw-bg-opacity: 1;
	background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.dark .dark\:text-gray-300 {
	--tw-text-opacity: 1;
	color: rgb(209 213 219 / var(--tw-text-opacity));
}

@media print {
	.print\:prose {
		color: var(--tw-prose-body);
		max-width: 65ch;
	}

	.print\:prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-lead);
		font-size: 1.25em;
		line-height: 1.6;
		margin-top: 1.2em;
		margin-bottom: 1.2em;
	}

	.print\:prose :where(a):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-links);
		text-decoration: underline;
		font-weight: 500;
	}

	.print\:prose :where(strong):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-bold);
		font-weight: 600;
	}

	.print\:prose :where(ol):not(:where([class~='not-prose'] *)) {
		list-style-type: decimal;
		padding-left: 1.625em;
	}

	.print\:prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-alpha;
	}

	.print\:prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-alpha;
	}

	.print\:prose :where(ol[type='A' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-alpha;
	}

	.print\:prose :where(ol[type='a' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-alpha;
	}

	.print\:prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-roman;
	}

	.print\:prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-roman;
	}

	.print\:prose :where(ol[type='I' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-roman;
	}

	.print\:prose :where(ol[type='i' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-roman;
	}

	.print\:prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
		list-style-type: decimal;
	}

	.print\:prose :where(ul):not(:where([class~='not-prose'] *)) {
		list-style-type: disc;
		padding-left: 1.625em;
	}

	.print\:prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
		font-weight: 400;
		color: var(--tw-prose-counters);
	}

	.print\:prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
		color: var(--tw-prose-bullets);
	}

	.print\:prose :where(hr):not(:where([class~='not-prose'] *)) {
		border-color: var(--tw-prose-hr);
		border-top-width: 1px;
		margin-top: 3em;
		margin-bottom: 3em;
	}

	.print\:prose :where(blockquote):not(:where([class~='not-prose'] *)) {
		font-weight: 500;
		font-style: italic;
		color: var(--tw-prose-quotes);
		border-left-width: 0.25rem;
		border-left-color: var(--tw-prose-quote-borders);
		quotes: '\201C''\201D''\2018''\2019';
		margin-top: 1.6em;
		margin-bottom: 1.6em;
		padding-left: 1em;
	}

	.print\:prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'] *))::before {
		content: open-quote;
	}

	.print\:prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *))::after {
		content: close-quote;
	}

	.print\:prose :where(h1):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 800;
		font-size: 2.25em;
		margin-top: 0;
		margin-bottom: 0.8888889em;
		line-height: 1.1111111;
	}

	.print\:prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 900;
	}

	.print\:prose :where(h2):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 700;
		font-size: 1.5em;
		margin-top: 2em;
		margin-bottom: 1em;
		line-height: 1.3333333;
	}

	.print\:prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 800;
	}

	.print\:prose :where(h3):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		font-size: 1.25em;
		margin-top: 1.6em;
		margin-bottom: 0.6em;
		line-height: 1.6;
	}

	.print\:prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 700;
	}

	.print\:prose :where(h4):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		margin-top: 1.5em;
		margin-bottom: 0.5em;
		line-height: 1.5;
	}

	.print\:prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 700;
	}

	.print\:prose :where(figure > *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}

	.print\:prose :where(figcaption):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-captions);
		font-size: 0.875em;
		line-height: 1.4285714;
		margin-top: 0.8571429em;
	}

	.print\:prose :where(code):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-code);
		font-weight: 600;
		font-size: 0.875em;
	}

	.print\:prose :where(code):not(:where([class~='not-prose'] *))::before {
		content: '`';
	}

	.print\:prose :where(code):not(:where([class~='not-prose'] *))::after {
		content: '`';
	}

	.print\:prose :where(a code):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-links);
	}

	.print\:prose :where(pre):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-pre-code);
		background-color: var(--tw-prose-pre-bg);
		overflow-x: auto;
		font-weight: 400;
		font-size: 0.875em;
		line-height: 1.7142857;
		margin-top: 1.7142857em;
		margin-bottom: 1.7142857em;
		border-radius: 0.375rem;
		padding-top: 0.8571429em;
		padding-right: 1.1428571em;
		padding-bottom: 0.8571429em;
		padding-left: 1.1428571em;
	}

	.print\:prose :where(pre code):not(:where([class~='not-prose'] *)) {
		background-color: transparent;
		border-width: 0;
		border-radius: 0;
		padding: 0;
		font-weight: inherit;
		color: inherit;
		font-size: inherit;
		font-family: inherit;
		line-height: inherit;
	}

	.print\:prose :where(pre code):not(:where([class~='not-prose'] *))::before {
		content: none;
	}

	.print\:prose :where(pre code):not(:where([class~='not-prose'] *))::after {
		content: none;
	}

	.print\:prose :where(table):not(:where([class~='not-prose'] *)) {
		width: 100%;
		table-layout: auto;
		text-align: left;
		margin-top: 2em;
		margin-bottom: 2em;
		font-size: 0.875em;
		line-height: 1.7142857;
	}

	.print\:prose :where(thead):not(:where([class~='not-prose'] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-th-borders);
	}

	.print\:prose :where(thead th):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		vertical-align: bottom;
		padding-right: 0.5714286em;
		padding-bottom: 0.5714286em;
		padding-left: 0.5714286em;
	}

	.print\:prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-td-borders);
	}

	.print\:prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
		border-bottom-width: 0;
	}

	.print\:prose :where(tbody td):not(:where([class~='not-prose'] *)) {
		vertical-align: baseline;
		padding-top: 0.5714286em;
		padding-right: 0.5714286em;
		padding-bottom: 0.5714286em;
		padding-left: 0.5714286em;
	}

	.print\:prose {
		--tw-prose-body: #374151;
		--tw-prose-headings: #111827;
		--tw-prose-lead: #4b5563;
		--tw-prose-links: #111827;
		--tw-prose-bold: #111827;
		--tw-prose-counters: #6b7280;
		--tw-prose-bullets: #d1d5db;
		--tw-prose-hr: #e5e7eb;
		--tw-prose-quotes: #111827;
		--tw-prose-quote-borders: #e5e7eb;
		--tw-prose-captions: #6b7280;
		--tw-prose-code: #111827;
		--tw-prose-pre-code: #e5e7eb;
		--tw-prose-pre-bg: #1f2937;
		--tw-prose-th-borders: #d1d5db;
		--tw-prose-td-borders: #e5e7eb;
		--tw-prose-invert-body: #d1d5db;
		--tw-prose-invert-headings: #fff;
		--tw-prose-invert-lead: #9ca3af;
		--tw-prose-invert-links: #fff;
		--tw-prose-invert-bold: #fff;
		--tw-prose-invert-counters: #9ca3af;
		--tw-prose-invert-bullets: #4b5563;
		--tw-prose-invert-hr: #374151;
		--tw-prose-invert-quotes: #f3f4f6;
		--tw-prose-invert-quote-borders: #374151;
		--tw-prose-invert-captions: #9ca3af;
		--tw-prose-invert-code: #fff;
		--tw-prose-invert-pre-code: #d1d5db;
		--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
		--tw-prose-invert-th-borders: #4b5563;
		--tw-prose-invert-td-borders: #374151;
		font-size: 1rem;
		line-height: 1.75;
	}

	.print\:prose :where(p):not(:where([class~='not-prose'] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
	}

	.print\:prose :where(img):not(:where([class~='not-prose'] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.print\:prose :where(video):not(:where([class~='not-prose'] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.print\:prose :where(figure):not(:where([class~='not-prose'] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.print\:prose :where(h2 code):not(:where([class~='not-prose'] *)) {
		font-size: 0.875em;
	}

	.print\:prose :where(h3 code):not(:where([class~='not-prose'] *)) {
		font-size: 0.9em;
	}

	.print\:prose :where(li):not(:where([class~='not-prose'] *)) {
		margin-top: 0.5em;
		margin-bottom: 0.5em;
	}

	.print\:prose :where(ol > li):not(:where([class~='not-prose'] *)) {
		padding-left: 0.375em;
	}

	.print\:prose :where(ul > li):not(:where([class~='not-prose'] *)) {
		padding-left: 0.375em;
	}

	.print\:prose > :where(ul > li p):not(:where([class~='not-prose'] *)) {
		margin-top: 0.75em;
		margin-bottom: 0.75em;
	}

	.print\:prose > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 1.25em;
	}

	.print\:prose > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 1.25em;
	}

	.print\:prose > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 1.25em;
	}

	.print\:prose > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 1.25em;
	}

	.print\:prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
		margin-top: 0.75em;
		margin-bottom: 0.75em;
	}

	.print\:prose :where(hr + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.print\:prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.print\:prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.print\:prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.print\:prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
		padding-left: 0;
	}

	.print\:prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
		padding-right: 0;
	}

	.print\:prose :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
		padding-left: 0;
	}

	.print\:prose :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
		padding-right: 0;
	}

	.print\:prose > :where(:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.print\:prose > :where(:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 0;
	}

	:root .print\:prose {
		--tw-prose-body: hsla(var(--bc) / 0.8);
		--tw-prose-headings: hsl(var(--bc));
		--tw-prose-lead: hsl(var(--bc));
		--tw-prose-links: hsl(var(--bc));
		--tw-prose-bold: hsl(var(--bc));
		--tw-prose-counters: hsl(var(--bc));
		--tw-prose-bullets: hsla(var(--bc) / 0.5);
		--tw-prose-hr: hsla(var(--bc) / 0.2);
		--tw-prose-quotes: hsl(var(--bc));
		--tw-prose-quote-borders: hsla(var(--bc) / 0.2);
		--tw-prose-captions: hsla(var(--bc) / 0.5);
		--tw-prose-code: hsl(var(--bc));
		--tw-prose-pre-code: hsl(var(--nc));
		--tw-prose-pre-bg: hsl(var(--n));
		--tw-prose-th-borders: hsla(var(--bc) / 0.5);
		--tw-prose-td-borders: hsla(var(--bc) / 0.2);
	}

	.print\:prose :where(code):not(:where([class~='not-prose'] *)) {
		padding: 2px 8px;
		border-radius: var(--rounded-badge);
	}

	.print\:prose code:after,
	.print\:prose code:before {
		content: none;
	}

	.print\:prose pre code {
		border-radius: none;
		padding: 0;
	}

	.print\:prose :where(tbody tr, thead):not(:where([class~='not-prose'] *)) {
		border-bottom-color: hsl(var(--bc) / 20%);
	}

	.print\:block {
		display: block;
	}

	.print\:hidden {
		display: none;
	}

	.print\:overflow-visible {
		overflow: visible;
	}

	.print\:border-none {
		border-style: none;
	}

	.print\:text-center {
		text-align: center;
	}

	.print\:text-black {
		--tw-text-opacity: 1;
		color: rgb(0 0 0 / var(--tw-text-opacity));
	}
}

@media (min-width: 640px) {
	.sm\:container {
		width: 100%;
	}

	@media (min-width: 640px) {
		.sm\:container {
			max-width: 640px;
		}
	}

	@media (min-width: 768px) {
		.sm\:container {
			max-width: 768px;
		}
	}

	@media (min-width: 1024px) {
		.sm\:container {
			max-width: 1024px;
		}
	}

	@media (min-width: 1280px) {
		.sm\:container {
			max-width: 1280px;
		}
	}

	@media (min-width: 1536px) {
		.sm\:container {
			max-width: 1536px;
		}
	}

	.sm\:prose {
		color: var(--tw-prose-body);
		max-width: 65ch;
	}

	.sm\:prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-lead);
		font-size: 1.25em;
		line-height: 1.6;
		margin-top: 1.2em;
		margin-bottom: 1.2em;
	}

	.sm\:prose :where(a):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-links);
		text-decoration: underline;
		font-weight: 500;
	}

	.sm\:prose :where(strong):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-bold);
		font-weight: 600;
	}

	.sm\:prose :where(ol):not(:where([class~='not-prose'] *)) {
		list-style-type: decimal;
		padding-left: 1.625em;
	}

	.sm\:prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-alpha;
	}

	.sm\:prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-alpha;
	}

	.sm\:prose :where(ol[type='A' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-alpha;
	}

	.sm\:prose :where(ol[type='a' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-alpha;
	}

	.sm\:prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-roman;
	}

	.sm\:prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-roman;
	}

	.sm\:prose :where(ol[type='I' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: upper-roman;
	}

	.sm\:prose :where(ol[type='i' s]):not(:where([class~='not-prose'] *)) {
		list-style-type: lower-roman;
	}

	.sm\:prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
		list-style-type: decimal;
	}

	.sm\:prose :where(ul):not(:where([class~='not-prose'] *)) {
		list-style-type: disc;
		padding-left: 1.625em;
	}

	.sm\:prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
		font-weight: 400;
		color: var(--tw-prose-counters);
	}

	.sm\:prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
		color: var(--tw-prose-bullets);
	}

	.sm\:prose :where(hr):not(:where([class~='not-prose'] *)) {
		border-color: var(--tw-prose-hr);
		border-top-width: 1px;
		margin-top: 3em;
		margin-bottom: 3em;
	}

	.sm\:prose :where(blockquote):not(:where([class~='not-prose'] *)) {
		font-weight: 500;
		font-style: italic;
		color: var(--tw-prose-quotes);
		border-left-width: 0.25rem;
		border-left-color: var(--tw-prose-quote-borders);
		quotes: '\201C''\201D''\2018''\2019';
		margin-top: 1.6em;
		margin-bottom: 1.6em;
		padding-left: 1em;
	}

	.sm\:prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'] *))::before {
		content: open-quote;
	}

	.sm\:prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'] *))::after {
		content: close-quote;
	}

	.sm\:prose :where(h1):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 800;
		font-size: 2.25em;
		margin-top: 0;
		margin-bottom: 0.8888889em;
		line-height: 1.1111111;
	}

	.sm\:prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 900;
	}

	.sm\:prose :where(h2):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 700;
		font-size: 1.5em;
		margin-top: 2em;
		margin-bottom: 1em;
		line-height: 1.3333333;
	}

	.sm\:prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 800;
	}

	.sm\:prose :where(h3):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		font-size: 1.25em;
		margin-top: 1.6em;
		margin-bottom: 0.6em;
		line-height: 1.6;
	}

	.sm\:prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 700;
	}

	.sm\:prose :where(h4):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		margin-top: 1.5em;
		margin-bottom: 0.5em;
		line-height: 1.5;
	}

	.sm\:prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
		font-weight: 700;
	}

	.sm\:prose :where(figure > *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}

	.sm\:prose :where(figcaption):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-captions);
		font-size: 0.875em;
		line-height: 1.4285714;
		margin-top: 0.8571429em;
	}

	.sm\:prose :where(code):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-code);
		font-weight: 600;
		font-size: 0.875em;
	}

	.sm\:prose :where(code):not(:where([class~='not-prose'] *))::before {
		content: '`';
	}

	.sm\:prose :where(code):not(:where([class~='not-prose'] *))::after {
		content: '`';
	}

	.sm\:prose :where(a code):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-links);
	}

	.sm\:prose :where(pre):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-pre-code);
		background-color: var(--tw-prose-pre-bg);
		overflow-x: auto;
		font-weight: 400;
		font-size: 0.875em;
		line-height: 1.7142857;
		margin-top: 1.7142857em;
		margin-bottom: 1.7142857em;
		border-radius: 0.375rem;
		padding-top: 0.8571429em;
		padding-right: 1.1428571em;
		padding-bottom: 0.8571429em;
		padding-left: 1.1428571em;
	}

	.sm\:prose :where(pre code):not(:where([class~='not-prose'] *)) {
		background-color: transparent;
		border-width: 0;
		border-radius: 0;
		padding: 0;
		font-weight: inherit;
		color: inherit;
		font-size: inherit;
		font-family: inherit;
		line-height: inherit;
	}

	.sm\:prose :where(pre code):not(:where([class~='not-prose'] *))::before {
		content: none;
	}

	.sm\:prose :where(pre code):not(:where([class~='not-prose'] *))::after {
		content: none;
	}

	.sm\:prose :where(table):not(:where([class~='not-prose'] *)) {
		width: 100%;
		table-layout: auto;
		text-align: left;
		margin-top: 2em;
		margin-bottom: 2em;
		font-size: 0.875em;
		line-height: 1.7142857;
	}

	.sm\:prose :where(thead):not(:where([class~='not-prose'] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-th-borders);
	}

	.sm\:prose :where(thead th):not(:where([class~='not-prose'] *)) {
		color: var(--tw-prose-headings);
		font-weight: 600;
		vertical-align: bottom;
		padding-right: 0.5714286em;
		padding-bottom: 0.5714286em;
		padding-left: 0.5714286em;
	}

	.sm\:prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
		border-bottom-width: 1px;
		border-bottom-color: var(--tw-prose-td-borders);
	}

	.sm\:prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
		border-bottom-width: 0;
	}

	.sm\:prose :where(tbody td):not(:where([class~='not-prose'] *)) {
		vertical-align: baseline;
		padding-top: 0.5714286em;
		padding-right: 0.5714286em;
		padding-bottom: 0.5714286em;
		padding-left: 0.5714286em;
	}

	.sm\:prose {
		--tw-prose-body: #374151;
		--tw-prose-headings: #111827;
		--tw-prose-lead: #4b5563;
		--tw-prose-links: #111827;
		--tw-prose-bold: #111827;
		--tw-prose-counters: #6b7280;
		--tw-prose-bullets: #d1d5db;
		--tw-prose-hr: #e5e7eb;
		--tw-prose-quotes: #111827;
		--tw-prose-quote-borders: #e5e7eb;
		--tw-prose-captions: #6b7280;
		--tw-prose-code: #111827;
		--tw-prose-pre-code: #e5e7eb;
		--tw-prose-pre-bg: #1f2937;
		--tw-prose-th-borders: #d1d5db;
		--tw-prose-td-borders: #e5e7eb;
		--tw-prose-invert-body: #d1d5db;
		--tw-prose-invert-headings: #fff;
		--tw-prose-invert-lead: #9ca3af;
		--tw-prose-invert-links: #fff;
		--tw-prose-invert-bold: #fff;
		--tw-prose-invert-counters: #9ca3af;
		--tw-prose-invert-bullets: #4b5563;
		--tw-prose-invert-hr: #374151;
		--tw-prose-invert-quotes: #f3f4f6;
		--tw-prose-invert-quote-borders: #374151;
		--tw-prose-invert-captions: #9ca3af;
		--tw-prose-invert-code: #fff;
		--tw-prose-invert-pre-code: #d1d5db;
		--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
		--tw-prose-invert-th-borders: #4b5563;
		--tw-prose-invert-td-borders: #374151;
		font-size: 1rem;
		line-height: 1.75;
	}

	.sm\:prose :where(p):not(:where([class~='not-prose'] *)) {
		margin-top: 1.25em;
		margin-bottom: 1.25em;
	}

	.sm\:prose :where(img):not(:where([class~='not-prose'] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.sm\:prose :where(video):not(:where([class~='not-prose'] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.sm\:prose :where(figure):not(:where([class~='not-prose'] *)) {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	.sm\:prose :where(h2 code):not(:where([class~='not-prose'] *)) {
		font-size: 0.875em;
	}

	.sm\:prose :where(h3 code):not(:where([class~='not-prose'] *)) {
		font-size: 0.9em;
	}

	.sm\:prose :where(li):not(:where([class~='not-prose'] *)) {
		margin-top: 0.5em;
		margin-bottom: 0.5em;
	}

	.sm\:prose :where(ol > li):not(:where([class~='not-prose'] *)) {
		padding-left: 0.375em;
	}

	.sm\:prose :where(ul > li):not(:where([class~='not-prose'] *)) {
		padding-left: 0.375em;
	}

	.sm\:prose > :where(ul > li p):not(:where([class~='not-prose'] *)) {
		margin-top: 0.75em;
		margin-bottom: 0.75em;
	}

	.sm\:prose > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 1.25em;
	}

	.sm\:prose > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 1.25em;
	}

	.sm\:prose > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 1.25em;
	}

	.sm\:prose > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 1.25em;
	}

	.sm\:prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
		margin-top: 0.75em;
		margin-bottom: 0.75em;
	}

	.sm\:prose :where(hr + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.sm\:prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.sm\:prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.sm\:prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.sm\:prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
		padding-left: 0;
	}

	.sm\:prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
		padding-right: 0;
	}

	.sm\:prose :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
		padding-left: 0;
	}

	.sm\:prose :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
		padding-right: 0;
	}

	.sm\:prose > :where(:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.sm\:prose > :where(:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 0;
	}

	:root .sm\:prose {
		--tw-prose-body: hsla(var(--bc) / 0.8);
		--tw-prose-headings: hsl(var(--bc));
		--tw-prose-lead: hsl(var(--bc));
		--tw-prose-links: hsl(var(--bc));
		--tw-prose-bold: hsl(var(--bc));
		--tw-prose-counters: hsl(var(--bc));
		--tw-prose-bullets: hsla(var(--bc) / 0.5);
		--tw-prose-hr: hsla(var(--bc) / 0.2);
		--tw-prose-quotes: hsl(var(--bc));
		--tw-prose-quote-borders: hsla(var(--bc) / 0.2);
		--tw-prose-captions: hsla(var(--bc) / 0.5);
		--tw-prose-code: hsl(var(--bc));
		--tw-prose-pre-code: hsl(var(--nc));
		--tw-prose-pre-bg: hsl(var(--n));
		--tw-prose-th-borders: hsla(var(--bc) / 0.5);
		--tw-prose-td-borders: hsla(var(--bc) / 0.2);
	}

	.sm\:prose :where(code):not(:where([class~='not-prose'] *)) {
		padding: 2px 8px;
		border-radius: var(--rounded-badge);
	}

	.sm\:prose code:after,
	.sm\:prose code:before {
		content: none;
	}

	.sm\:prose pre code {
		border-radius: none;
		padding: 0;
	}

	.sm\:prose :where(tbody tr, thead):not(:where([class~='not-prose'] *)) {
		border-bottom-color: hsl(var(--bc) / 20%);
	}

	.sm\:modal-middle {
		align-items: center;
	}

	.sm\:modal-middle :where(.modal-box) {
		width: 91.666667%;
		max-width: 32rem;
		--tw-translate-y: 0px;
		--tw-scale-x: 0.9;
		--tw-scale-y: 0.9;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
			skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
			scaleY(var(--tw-scale-y));
		border-bottom-left-radius: var(--rounded-box, 1rem);
		border-bottom-right-radius: var(--rounded-box, 1rem);
	}

	.sm\:max-h-\[75vh\] {
		max-height: 75vh;
	}

	.sm\:px-2 {
		padding-left: 0.5rem;
		padding-right: 0.5rem;
	}

	.sm\:px-6 {
		padding-left: 1.5rem;
		padding-right: 1.5rem;
	}

	.sm\:text-5xl {
		font-size: 3rem;
		line-height: 1;
	}

	.sm\:text-2xl {
		font-size: 1.5rem;
		line-height: 2rem;
	}
}

@media (min-width: 768px) {
	.md\:container {
		width: 100%;
	}

	@media (min-width: 640px) {
		.md\:container {
			max-width: 640px;
		}
	}

	@media (min-width: 768px) {
		.md\:container {
			max-width: 768px;
		}
	}

	@media (min-width: 1024px) {
		.md\:container {
			max-width: 1024px;
		}
	}

	@media (min-width: 1280px) {
		.md\:container {
			max-width: 1280px;
		}
	}

	@media (min-width: 1536px) {
		.md\:container {
			max-width: 1536px;
		}
	}

	.md\:-mx-2 {
		margin-left: -0.5rem;
		margin-right: -0.5rem;
	}

	.md\:flex {
		display: flex;
	}

	.md\:inline-flex {
		display: inline-flex;
	}

	.md\:w-1\/3 {
		width: 33.333333%;
	}

	.md\:w-3\/12 {
		width: 25%;
	}

	.md\:w-9\/12 {
		width: 75%;
	}

	.md\:grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.md\:flex-nowrap {
		flex-wrap: nowrap;
	}

	.md\:justify-end {
		justify-content: flex-end;
	}

	.md\:gap-4 {
		gap: 1rem;
	}

	.md\:gap-y-4 {
		row-gap: 1rem;
	}

	.md\:px-2 {
		padding-left: 0.5rem;
		padding-right: 0.5rem;
	}

	.md\:pb-28 {
		padding-bottom: 7rem;
	}
}

@media (min-width: 1024px) {
	.lg\:dropdown {
		position: relative;
		display: inline-block;
	}

	.lg\:dropdown > *:focus {
		outline: 2px solid transparent;
		outline-offset: 2px;
	}

	.lg\:dropdown .dropdown-content {
		visibility: hidden;
		position: absolute;
		z-index: 50;
		opacity: 0;
		transform-origin: top;
		--tw-scale-x: 0.95;
		--tw-scale-y: 0.95;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
			skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
			scaleY(var(--tw-scale-y));
		transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow,
			transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
			opacity, box-shadow, transform, filter, backdrop-filter;
		transition-property: color, background-color, border-color, text-decoration-color, fill, stroke,
			opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color,
			-webkit-backdrop-filter;
		transition-duration: 200ms;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}

	.lg\:dropdown.dropdown-open .dropdown-content,
	.lg\:dropdown.dropdown-hover:hover .dropdown-content,
	.lg\:dropdown:not(.dropdown-hover):focus .dropdown-content,
	.lg\:dropdown:not(.dropdown-hover):focus-within .dropdown-content {
		visibility: visible;
		opacity: 1;
	}

	.btn.loading.lg\:btn-lg:before {
		height: 1.25rem;
		width: 1.25rem;
	}

	.lg\:dropdown.dropdown-open .dropdown-content,
	.lg\:dropdown.dropdown-hover:hover .dropdown-content,
	.lg\:dropdown:focus .dropdown-content,
	.lg\:dropdown:focus-within .dropdown-content {
		--tw-scale-x: 1;
		--tw-scale-y: 1;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
			skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
			scaleY(var(--tw-scale-y));
	}

	.lg\:btn-lg {
		height: 4rem;
		padding-left: 1.5rem;
		padding-right: 1.5rem;
		min-height: 4rem;
		font-size: 1.125rem;
	}

	 {
		height: 4rem;
		width: 4rem;
		border-radius: 9999px;
		padding: 0px;
	}

	.lg\:mt-6 {
		margin-top: 1.5rem;
	}

	.lg\:flex {
		display: flex;
	}

	.lg\:hidden {
		display: none;
	}

	.lg\:max-h-\[80vh\] {
		max-height: 80vh;
	}

	.lg\:flex-row {
		flex-direction: row;
	}

	.lg\:items-end {
		align-items: flex-end;
	}

	.lg\:justify-start {
		justify-content: flex-start;
	}

	.lg\:gap-0 {
		gap: 0px;
	}

	.lg\:px-4 {
		padding-left: 1rem;
		padding-right: 1rem;
	}

	.lg\:py-10 {
		padding-top: 2.5rem;
		padding-bottom: 2.5rem;
	}

	.lg\:px-8 {
		padding-left: 2rem;
		padding-right: 2rem;
	}

	.lg\:pb-40 {
		padding-bottom: 10rem;
	}

	.lg\:pl-10 {
		padding-left: 2.5rem;
	}

	.lg\:pb-32 {
		padding-bottom: 8rem;
	}

	.lg\:text-left {
		text-align: left;
	}

	.lg\:text-7xl {
		font-size: 4.5rem;
		line-height: 1;
	}

	.lg\:text-3xl {
		font-size: 1.875rem;
		line-height: 2.25rem;
	}
}

@media (min-width: 1280px) {
	.xl\:gap-20 {
		gap: 5rem;
	}
}

@media (min-width: 1536px) {
	.\32xl\:prose-lg {
		font-size: 1.125rem;
		line-height: 1.7777778;
	}

	.\32xl\:prose-lg :where(p):not(:where([class~='not-prose'] *)) {
		margin-top: 1.3333333em;
		margin-bottom: 1.3333333em;
	}

	.\32xl\:prose-lg :where([class~='lead']):not(:where([class~='not-prose'] *)) {
		font-size: 1.2222222em;
		line-height: 1.4545455;
		margin-top: 1.0909091em;
		margin-bottom: 1.0909091em;
	}

	.\32xl\:prose-lg :where(blockquote):not(:where([class~='not-prose'] *)) {
		margin-top: 1.6666667em;
		margin-bottom: 1.6666667em;
		padding-left: 1em;
	}

	.\32xl\:prose-lg :where(h1):not(:where([class~='not-prose'] *)) {
		font-size: 2.6666667em;
		margin-top: 0;
		margin-bottom: 0.8333333em;
		line-height: 1;
	}

	.\32xl\:prose-lg :where(h2):not(:where([class~='not-prose'] *)) {
		font-size: 1.6666667em;
		margin-top: 1.8666667em;
		margin-bottom: 1.0666667em;
		line-height: 1.3333333;
	}

	.\32xl\:prose-lg :where(h3):not(:where([class~='not-prose'] *)) {
		font-size: 1.3333333em;
		margin-top: 1.6666667em;
		margin-bottom: 0.6666667em;
		line-height: 1.5;
	}

	.\32xl\:prose-lg :where(h4):not(:where([class~='not-prose'] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 0.4444444em;
		line-height: 1.5555556;
	}

	.\32xl\:prose-lg :where(img):not(:where([class~='not-prose'] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.\32xl\:prose-lg :where(video):not(:where([class~='not-prose'] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.\32xl\:prose-lg :where(figure):not(:where([class~='not-prose'] *)) {
		margin-top: 1.7777778em;
		margin-bottom: 1.7777778em;
	}

	.\32xl\:prose-lg :where(figure > *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
		margin-bottom: 0;
	}

	.\32xl\:prose-lg :where(figcaption):not(:where([class~='not-prose'] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
		margin-top: 1em;
	}

	.\32xl\:prose-lg :where(code):not(:where([class~='not-prose'] *)) {
		font-size: 0.8888889em;
	}

	.\32xl\:prose-lg :where(h2 code):not(:where([class~='not-prose'] *)) {
		font-size: 0.8666667em;
	}

	.\32xl\:prose-lg :where(h3 code):not(:where([class~='not-prose'] *)) {
		font-size: 0.875em;
	}

	.\32xl\:prose-lg :where(pre):not(:where([class~='not-prose'] *)) {
		font-size: 0.8888889em;
		line-height: 1.75;
		margin-top: 2em;
		margin-bottom: 2em;
		border-radius: 0.375rem;
		padding-top: 1em;
		padding-right: 1.5em;
		padding-bottom: 1em;
		padding-left: 1.5em;
	}

	.\32xl\:prose-lg :where(ol):not(:where([class~='not-prose'] *)) {
		padding-left: 1.5555556em;
	}

	.\32xl\:prose-lg :where(ul):not(:where([class~='not-prose'] *)) {
		padding-left: 1.5555556em;
	}

	.\32xl\:prose-lg :where(li):not(:where([class~='not-prose'] *)) {
		margin-top: 0.6666667em;
		margin-bottom: 0.6666667em;
	}

	.\32xl\:prose-lg :where(ol > li):not(:where([class~='not-prose'] *)) {
		padding-left: 0.4444444em;
	}

	.\32xl\:prose-lg :where(ul > li):not(:where([class~='not-prose'] *)) {
		padding-left: 0.4444444em;
	}

	.\32xl\:prose-lg > :where(ul > li p):not(:where([class~='not-prose'] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}

	.\32xl\:prose-lg > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 1.3333333em;
	}

	.\32xl\:prose-lg > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 1.3333333em;
	}

	.\32xl\:prose-lg > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 1.3333333em;
	}

	.\32xl\:prose-lg > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 1.3333333em;
	}

	.\32xl\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
		margin-top: 0.8888889em;
		margin-bottom: 0.8888889em;
	}

	.\32xl\:prose-lg :where(hr):not(:where([class~='not-prose'] *)) {
		margin-top: 3.1111111em;
		margin-bottom: 3.1111111em;
	}

	.\32xl\:prose-lg :where(hr + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.\32xl\:prose-lg :where(h2 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.\32xl\:prose-lg :where(h3 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.\32xl\:prose-lg :where(h4 + *):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.\32xl\:prose-lg :where(table):not(:where([class~='not-prose'] *)) {
		font-size: 0.8888889em;
		line-height: 1.5;
	}

	.\32xl\:prose-lg :where(thead th):not(:where([class~='not-prose'] *)) {
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}

	.\32xl\:prose-lg :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
		padding-left: 0;
	}

	.\32xl\:prose-lg :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
		padding-right: 0;
	}

	.\32xl\:prose-lg :where(tbody td):not(:where([class~='not-prose'] *)) {
		padding-top: 0.75em;
		padding-right: 0.75em;
		padding-bottom: 0.75em;
		padding-left: 0.75em;
	}

	.\32xl\:prose-lg :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
		padding-left: 0;
	}

	.\32xl\:prose-lg :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
		padding-right: 0;
	}

	.\32xl\:prose-lg > :where(:first-child):not(:where([class~='not-prose'] *)) {
		margin-top: 0;
	}

	.\32xl\:prose-lg > :where(:last-child):not(:where([class~='not-prose'] *)) {
		margin-bottom: 0;
	}

	.\32xl\:p-4 {
		padding: 1rem;
	}
}
